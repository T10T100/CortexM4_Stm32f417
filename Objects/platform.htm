<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\platform.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\platform.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Thu Dec 24 20:32:34 2015
<BR><P>
<H3>Maximum Stack Usage =        424 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
sensorClickHandler(void*) &rArr; GuiEngine::fireSensorClick(TouchStruct) &rArr; GContentPane&lang;unsigned short&rang;::fireSensorClickPane(TouchStruct) &rArr; int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorClick(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[b8]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2c]">ADC_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[14]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[2e]">CAN1_RX0_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[2f]">CAN1_RX1_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[30]">CAN1_SCE_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[2d]">CAN1_TX_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[5a]">CAN2_RX0_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[5b]">CAN2_RX1_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[5c]">CAN2_SCE_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[59]">CAN2_TX_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[69]">CRYP_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[68]">DCMI_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[25]">DMA1_Stream0_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[26]">DMA1_Stream1_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[27]">DMA1_Stream2_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[28]">DMA1_Stream3_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[29]">DMA1_Stream4_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[2a]">DMA1_Stream5_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[2b]">DMA1_Stream6_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[49]">DMA1_Stream7_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[52]">DMA2_Stream0_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[53]">DMA2_Stream1_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[54]">DMA2_Stream2_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[55]">DMA2_Stream3_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[56]">DMA2_Stream4_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[5e]">DMA2_Stream5_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[5f]">DMA2_Stream6_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[60]">DMA2_Stream7_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[17]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[57]">ETH_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[58]">ETH_WKUP_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[20]">EXTI0_IRQHandler</a> from stm32f4xx_it.o(i.EXTI0_IRQHandler) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[42]">EXTI15_10_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[21]">EXTI1_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[22]">EXTI2_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[23]">EXTI3_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[24]">EXTI4_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[31]">EXTI9_5_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[1e]">FLASH_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[4a]">FMC_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[6b]">FPU_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[6a]">HASH_RNG_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[12]">HardFault_Handler</a> from stackswitching.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[3a]">I2C1_ER_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[39]">I2C1_EV_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[3c]">I2C2_ER_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[3b]">I2C2_EV_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[63]">I2C3_ER_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[62]">I2C3_EV_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[13]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[11]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[5d]">OTG_FS_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[44]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[65]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[64]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[67]">OTG_HS_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[66]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[1b]">PVD_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[18]">PendSV_Handler</a> from stackswitching.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[1f]">RCC_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[43]">RTC_Alarm_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[1d]">RTC_WKUP_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[10]">Reset_Handler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[4b]">SDIO_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[3d]">SPI1_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[3e]">SPI2_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[4d]">SPI3_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[16]">SVC_Handler</a> from stackswitching.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[19]">SysTick_Handler</a> from stackswitching.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[6c]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f417xx.o(.text)
 <LI><a href="#[1c]">TAMP_STAMP_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[32]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[35]">TIM1_CC_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[34]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[33]">TIM1_UP_TIM10_IRQHandler</a> from stm32f4xx_it.o(i.TIM1_UP_TIM10_IRQHandler) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[36]">TIM2_IRQHandler</a> from stm32f4xx_it.o(i.TIM2_IRQHandler) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[37]">TIM3_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[38]">TIM4_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[4c]">TIM5_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[50]">TIM6_DAC_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[51]">TIM7_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[45]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[48]">TIM8_CC_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[47]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[46]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[4e]">UART4_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[4f]">UART5_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[3f]">USART1_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[40]">USART2_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[41]">USART3_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[61]">USART6_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[15]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[1a]">WWDG_IRQHandler</a> from startup_stm32f417xx.o(.text) referenced from startup_stm32f417xx.o(RESET)
 <LI><a href="#[79]">SystemEvent(void*)</a> from main.o(i._Z11SystemEventPv) referenced from main.o(i._Z18SystemEventBurner2Pv)
 <LI><a href="#[7b]">eventServer(void*)</a> from event.o(i._Z11eventServerPv) referenced from vm.o(i._ZN7Runtime4initEjj)
 <LI><a href="#[7c]">timerServer(void*)</a> from timerserver.o(i._Z11timerServerPv) referenced from vm.o(i._ZN7Runtime4initEjj)
 <LI><a href="#[74]">PaneClickListener(TouchStruct)</a> from main.o(i._Z17PaneClickListener11TouchStruct) referenced from main.o(i._Z18SystemEventBurner2Pv)
 <LI><a href="#[7a]">SystemEventBurner(void*)</a> from main.o(i._Z17SystemEventBurnerPv) referenced from vm.o(i._ZN7Runtime4initEjj)
 <LI><a href="#[7d]">touchSensorServer(void*)</a> from touchsensorapiinterface.o(i._Z17touchSensorServerPv) referenced from vm.o(i._ZN7Runtime4initEjj)
 <LI><a href="#[70]">SystemEventBurner2(void*)</a> from main.o(i._Z18SystemEventBurner2Pv) referenced from main.o(i._Z17SystemEventBurnerPv)
 <LI><a href="#[6f]">SystemEventBurner3(void*)</a> from main.o(i._Z18SystemEventBurner3Pv) referenced from main.o(i._Z17SystemEventBurnerPv)
 <LI><a href="#[72]">labelClickListener(TouchStruct)</a> from main.o(i._Z18labelClickListener11TouchStruct) referenced from main.o(i._Z18SystemEventBurner2Pv)
 <LI><a href="#[73]">labelTouchListener(TouchStruct)</a> from main.o(i._Z18labelTouchListener11TouchStruct) referenced from main.o(i._Z18SystemEventBurner2Pv)
 <LI><a href="#[80]">sensorClickHandler(void*)</a> from guiengine.o(i._Z18sensorClickHandlerPv) referenced from guiengine.o(i._ZN9GuiEngine12setListenersEv)
 <LI><a href="#[82]">sensorPressHandler(void*)</a> from guiengine.o(i._Z18sensorPressHandlerPv) referenced from guiengine.o(i._ZN9GuiEngine12setListenersEv)
 <LI><a href="#[7f]">sensorTouchHandler(void*)</a> from guiengine.o(i._Z18sensorTouchHandlerPv) referenced from guiengine.o(i._ZN9GuiEngine12setListenersEv)
 <LI><a href="#[75]">SliderTouchListener(TouchStruct)</a> from main.o(i._Z19SliderTouchListener11TouchStruct) referenced from main.o(i._Z18SystemEventBurner2Pv)
 <LI><a href="#[76]">Slider2TouchListener(TouchStruct)</a> from main.o(i._Z20Slider2TouchListener11TouchStruct) referenced from main.o(i._Z18SystemEventBurner2Pv)
 <LI><a href="#[77]">Slider3TouchListener(TouchStruct)</a> from main.o(i._Z20Slider3TouchListener11TouchStruct) referenced from main.o(i._Z18SystemEventBurner2Pv)
 <LI><a href="#[78]">Slider4TouchListener(TouchStruct)</a> from main.o(i._Z20Slider4TouchListener11TouchStruct) referenced from main.o(i._Z18SystemEventBurner2Pv)
 <LI><a href="#[81]">sensorReleaseHandler(void*)</a> from guiengine.o(i._Z20sensorReleaseHandlerPv) referenced from guiengine.o(i._ZN9GuiEngine12setListenersEv)
 <LI><a href="#[87]">WalkingManRepaintHook(void*)</a> from gametestwalkingman.o(i._Z21WalkingManRepaintHookPv) referenced from main.o(t._ZN16WalkingManObjectItEC1EP19NonPaletteInterfaceItE)
 <LI><a href="#[83]">TextFieldsDEfaultCickListener(TouchStruct)</a> from textfield.o(i._Z29TextFieldsDEfaultCickListener11TouchStruct) referenced from main.o(t._ZN10GTextFieldItEC2EP7GraphicItE)
 <LI><a href="#[88]">DefaultWalkingManClickListener(TouchStruct)</a> from gametestwalkingman.o(i._Z30DefaultWalkingManClickListener11TouchStruct) referenced from main.o(t._ZN16WalkingManObjectItEC1EP19NonPaletteInterfaceItE)
 <LI><a href="#[89]">DefaultWalkingManTouchListener(TouchStruct)</a> from gametestwalkingman.o(i._Z30DefaultWalkingManTouchListener11TouchStruct) referenced from main.o(t._ZN16WalkingManObjectItEC1EP19NonPaletteInterfaceItE)
 <LI><a href="#[84]">TextFieldsDEfaultTouchListener(TouchStruct)</a> from textfield.o(i._Z30TextFieldsDEfaultTouchListener11TouchStruct) referenced from main.o(t._ZN10GTextFieldItEC2EP7GraphicItE)
 <LI><a href="#[8a]">DefaultWalkingManReleaseListener(TouchStruct)</a> from gametestwalkingman.o(i._Z32DefaultWalkingManReleaseListener11TouchStruct) referenced from main.o(t._ZN16WalkingManObjectItEC1EP19NonPaletteInterfaceItE)
 <LI><a href="#[85]">TextFieldsDEfaultReleaseListener(TouchStruct)</a> from textfield.o(i._Z32TextFieldsDEfaultReleaseListener11TouchStruct) referenced from main.o(t._ZN10GTextFieldItEC2EP7GraphicItE)
 <LI><a href="#[86]">WalkingManThrowingWeaponRepaintHook(void*)</a> from gametestwalkingman.o(i._Z35WalkingManThrowingWeaponRepaintHookPv) referenced from gametestwalkingman.o(t._ZN16WalkingManObjectItE11throwWeaponEii)
 <LI><a href="#[6e]">event(void*)</a> from main.o(i._Z5eventPv) referenced from main.o(i._Z17SystemEventBurnerPv)
 <LI><a href="#[71]">timer0(void*)</a> from main.o(i._Z6timer0Pv) referenced from main.o(i._Z17SystemEventBurnerPv)
 <LI><a href="#[8e]">GTextField&lang;unsigned short&rang;::repaint()</a> from main.o(t._ZN10GTextFieldItE7repaintEv) referenced from main.o(.constdata__ZTV10GTextFieldItE)
 <LI><a href="#[7e]">ArrayListBase&lang;Runnable&rang;::ArrayListBase()</a> from device.o(t._ZN13ArrayListBaseI8RunnableEC1Ev) referenced from device.o(i._ZN7RuntimeC2Ev)
 <LI><a href="#[8f]">GraphicObject&lang;unsigned short&rang;::repaint()</a> from gametestwalkingman.o(t._ZN13GraphicObjectItE7repaintEv) referenced from gametestwalkingman.o(.constdata__ZTV13GraphicObjectItE)
 <LI><a href="#[8d]">ServerFactory&lang;DefaultServerListener&rang;::newListener(int(*)(void*))</a> from device.o(t._ZN13ServerFactoryI21DefaultServerListenerE11newListenerEPFiPvE) referenced from device.o(.constdata)
 <LI><a href="#[8d]">ServerFactory&lang;DefaultServerListener&rang;::newListener(int(*)(void*))</a> from device.o(t._ZN13ServerFactoryI21DefaultServerListenerE11newListenerEPFiPvE) referenced from device.o(.constdata__ZTV13ServerFactoryI21DefaultServerListenerE)
 <LI><a href="#[8d]">ServerFactory&lang;DefaultServerListener&rang;::newListener(int(*)(void*))</a> from device.o(t._ZN13ServerFactoryI21DefaultServerListenerE11newListenerEPFiPvE) referenced from device.o(.constdata__ZTV7Runtime)
 <LI><a href="#[90]">NonPaletteInterface&lang;unsigned short&rang;::repaint()</a> from main.o(t._ZN19NonPaletteInterfaceItE7repaintEv) referenced from main.o(.constdata__ZTV19NonPaletteInterfaceItE)
 <LI><a href="#[91]">GLabel&lang;unsigned short&rang;::repaint()</a> from main.o(t._ZN6GLabelItE7repaintEv) referenced from main.o(.constdata__ZTV6GLabelItE)
 <LI><a href="#[92]">GSlide&lang;unsigned short&rang;::repaint()</a> from main.o(t._ZN6GSlideItE7repaintEv) referenced from main.o(.constdata__ZTV6GSlideItE)
 <LI><a href="#[94]">Runtime::free(void*)</a> from device.o(i._ZN7Runtime4freeEPv) referenced from device.o(.constdata__ZTV7Runtime)
 <LI><a href="#[93]">Runtime::alloc(unsigned)</a> from device.o(i._ZN7Runtime5allocEj) referenced from device.o(.constdata__ZTV7Runtime)
 <LI><a href="#[8c]">Allocator&lang;void*&rang;::free(void*)</a> from main.o(t._ZN9AllocatorIPvE4freeES0_) referenced 5 times from device.o(.constdata)
 <LI><a href="#[8c]">Allocator&lang;void*&rang;::free(void*)</a> from main.o(t._ZN9AllocatorIPvE4freeES0_) referenced from main.o(.constdata__ZTV12GContentPaneItE)
 <LI><a href="#[8c]">Allocator&lang;void*&rang;::free(void*)</a> from main.o(t._ZN9AllocatorIPvE4freeES0_) referenced from device.o(.constdata__ZTV13ServerFactoryI21DefaultServerListenerE)
 <LI><a href="#[8c]">Allocator&lang;void*&rang;::free(void*)</a> from main.o(t._ZN9AllocatorIPvE4freeES0_) referenced from device.o(.constdata__ZTV13ThreadFactory)
 <LI><a href="#[8c]">Allocator&lang;void*&rang;::free(void*)</a> from main.o(t._ZN9AllocatorIPvE4freeES0_) referenced from device.o(.constdata__ZTV14TimerInterface)
 <LI><a href="#[8c]">Allocator&lang;void*&rang;::free(void*)</a> from main.o(t._ZN9AllocatorIPvE4freeES0_) referenced from main.o(.constdata__ZTV9AllocatorIPvE)
 <LI><a href="#[8b]">Allocator&lang;void*&rang;::alloc(unsigned)</a> from main.o(t._ZN9AllocatorIPvE5allocEj) referenced 5 times from device.o(.constdata)
 <LI><a href="#[8b]">Allocator&lang;void*&rang;::alloc(unsigned)</a> from main.o(t._ZN9AllocatorIPvE5allocEj) referenced from main.o(.constdata__ZTV12GContentPaneItE)
 <LI><a href="#[8b]">Allocator&lang;void*&rang;::alloc(unsigned)</a> from main.o(t._ZN9AllocatorIPvE5allocEj) referenced from device.o(.constdata__ZTV13ServerFactoryI21DefaultServerListenerE)
 <LI><a href="#[8b]">Allocator&lang;void*&rang;::alloc(unsigned)</a> from main.o(t._ZN9AllocatorIPvE5allocEj) referenced from device.o(.constdata__ZTV13ThreadFactory)
 <LI><a href="#[8b]">Allocator&lang;void*&rang;::alloc(unsigned)</a> from main.o(t._ZN9AllocatorIPvE5allocEj) referenced from device.o(.constdata__ZTV14TimerInterface)
 <LI><a href="#[8b]">Allocator&lang;void*&rang;::alloc(unsigned)</a> from main.o(t._ZN9AllocatorIPvE5allocEj) referenced from main.o(.constdata__ZTV9AllocatorIPvE)
 <LI><a href="#[99]">SensorMcu::SerialRead(unsigned char*, unsigned short)</a> from device.o(i._ZN9SensorMcu10SerialReadEPht) referenced from device.o(.constdata__ZTV9SensorMcu)
 <LI><a href="#[9a]">SensorMcu::SerialWrite(unsigned char*, unsigned short)</a> from device.o(i._ZN9SensorMcu11SerialWriteEPht) referenced from device.o(.constdata__ZTV9SensorMcu)
 <LI><a href="#[98]">thunk{-204} to Runtime::free(void*)</a> from device.o(i._ZThn204_N7Runtime4freeEPv) referenced from device.o(.constdata__ZTV7Runtime)
 <LI><a href="#[97]">thunk{-204} to Runtime::alloc(unsigned)</a> from device.o(i._ZThn204_N7Runtime5allocEj) referenced from device.o(.constdata__ZTV7Runtime)
 <LI><a href="#[95]">thunk{v:0,-12} to Runtime::alloc(unsigned)</a> from device.o(i._ZTv0_n12_N7Runtime5allocEj) referenced from device.o(.constdata__ZTV7Runtime)
 <LI><a href="#[96]">thunk{v:0,-16} to Runtime::free(void*)</a> from device.o(i._ZTv0_n16_N7Runtime4freeEPv) referenced from device.o(.constdata__ZTV7Runtime)
 <LI><a href="#[9d]">__main</a> from __main.o(!!!main) referenced from startup_stm32f417xx.o(.text)
 <LI><a href="#[9c]">__sti___10_device_cpp_runtime</a> from device.o(i.__sti___10_device_cpp_runtime) referenced from device.o(.init_array)
 <LI><a href="#[9b]">__sti___8_main_cpp_Font</a> from main.o(i.__sti___8_main_cpp_Font) referenced from main.o(.init_array)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[9d]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[9f]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[a1]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[1f1]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[1f2]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[a2]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[1f3]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[a9]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[a3]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[1f4]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[1f5]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[1f6]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[1f7]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[a5]"></a>__rt_lib_init_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000031))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_cpp_2 &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[1f8]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[1f9]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[1fa]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[1fb]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[1fc]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[1fd]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[1fe]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[1ff]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[200]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[201]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[202]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[203]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[204]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[205]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[206]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[207]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[ae]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[208]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[209]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[20a]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[20b]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[20c]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[20d]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[a0]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[20e]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[a6]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a8]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[20f]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[aa]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; vm::init(unsigned, unsigned) &rArr; vminit(unsigned, unsigned) &rArr; Runtime::init(unsigned, unsigned) &rArr; ServerFactory&lang;DefaultServerListener&rang;::installServer(int(*)(void*), int, int, char*, void*) &rArr; Runnable* ThreadFactory::newServer&lang;char&rang;(int(*)(void*), unsigned, unsigned, T1*) &rArr; Runnable::init(int(*)(void*), unsigned, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[210]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[b9]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[ad]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[211]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[af]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[212]"></a>upcall</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stackswitching.o(.text), UNUSED)

<P><STRONG><a name="[b1]"></a>vmstart</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stackswitching.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = vmstart &rArr; VMStart &rArr; vmstart() &rArr; RunnbleInterface&lang;Runnable&rang;::getFrame(RuntimeFrame*)
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VMStart
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableFPU
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vm::start()
</UL>

<P><STRONG><a name="[19]"></a>SysTick_Handler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stackswitching.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SysTick_Handler &rArr; VMTick &rArr; vmtick(void*) &rArr; Runtime::dispatch(void*) &rArr; void Runtime::runnablesTick&lang;Runtime*&rang;(T1) &rArr; Runtime::push(Runnable*) &rArr; ArrayListBase&lang;Runnable&rang;::addLast(Runnable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VMTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>PendSV_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stackswitching.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SVC_Handler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stackswitching.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = SVC_Handler &rArr; VMSvc &rArr; vmsvc(SVC_arg) &rArr; Runtime::dispatchSVC(SVC_arg) &rArr; Runtime::resolveAPICall(RuntimeFrame*, SVC_arg) &rArr; Runtime::addRunnable(int(*)(void*), char*, unsigned) &rArr; Runnable::init(int(*)(void*), unsigned, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VMSvc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>HardFault_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stackswitching.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = HardFault_Handler &rArr; VMHardFault &rArr; vmfault(SVC_arg) &rArr; ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;::fill(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; unsigned ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill&lang;unsigned short, Box&lang;int&rang;&rang;(T1*, T2) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::window(unsigned short, unsigned short, unsigned short, unsigned short) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::wrData8(unsigned char) &rArr; SpiSoftTypeDef::send_9bit_Data(bool, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VMHardFault
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[b2]"></a>EnableFPU</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stackswitching.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmstart
</UL>

<P><STRONG><a name="[10]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f417xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[b8]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f417xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[14d]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryAllocator::Delete(void*)
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryAllocator::New(unsigned)
</UL>

<P><STRONG><a name="[213]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[214]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[1d5]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::stringifyInt(char*, int, int)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::stringifyInt(char*, unsigned, int)
</UL>

<P><STRONG><a name="[136]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorTouchPane(TouchStruct)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorPressPane(TouchStruct)
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorClickPane(TouchStruct)
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorRelease(TouchStruct)
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorTouch(TouchStruct)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorPress(TouchStruct)
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorClick(TouchStruct)
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::fireSensorRelease(TouchStruct)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::fireSensorTouch(TouchStruct)
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::fireSensorPress(TouchStruct)
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::fireSensorClick(TouchStruct)
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorAdapter::getData()
</UL>

<P><STRONG><a name="[215]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[216]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[217]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[112]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorAdapter::getData()
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensorReleaseHandler(void*)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensorTouchHandler(void*)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensorPressHandler(void*)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensorClickHandler(void*)
</UL>

<P><STRONG><a name="[218]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[219]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[21a]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[21b]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[c]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[b]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, init_aeabi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_cpp_2
</UL>

<P><STRONG><a name="[21c]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[21d]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[ac]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[b0]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[21e]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[21f]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[14]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[220]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[17]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.EXTI0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[d2]"></a>FSMC_NORSRAM_Extended_Timing_Init</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, stm32f4xx_ll_fsmc.o(i.FSMC_NORSRAM_Extended_Timing_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FSMC_NORSRAM_Extended_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
</UL>

<P><STRONG><a name="[d0]"></a>FSMC_NORSRAM_Init</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, stm32f4xx_ll_fsmc.o(i.FSMC_NORSRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FSMC_NORSRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
</UL>

<P><STRONG><a name="[d1]"></a>FSMC_NORSRAM_Timing_Init</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, stm32f4xx_ll_fsmc.o(i.FSMC_NORSRAM_Timing_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FSMC_NORSRAM_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
</UL>

<P><STRONG><a name="[129]"></a>HAL_DMA_Init</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, stm32f4xx_hal_dma.o(i.HAL_DMA_Init))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DmaInit()
</UL>

<P><STRONG><a name="[ba]"></a>HAL_Delay</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, stm32f4xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::delay(unsigned)
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner(void*)
</UL>

<P><STRONG><a name="[ee]"></a>HAL_GPIO_Init</STRONG> (Thumb, 470 bytes, Stack size 24 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEV_AltGpio_Init(GPIO_TypeDef*, int, unsigned, unsigned)
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEV_Gpio_Init(GPIO_TypeDef*, int, unsigned, unsigned)
</UL>

<P><STRONG><a name="[104]"></a>HAL_GetREVID</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_GetREVID))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config()
</UL>

<P><STRONG><a name="[bb]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to stm32f4xx_hal_spi_c]::SPI_WaitOnFlagUntilTimeout(__SPI_HandleTypeDef*, unsigned, FlagStatus, unsigned)
</UL>

<P><STRONG><a name="[e9]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMSIS_Tick()
</UL>

<P><STRONG><a name="[bc]"></a>HAL_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32f4xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; [local to stm32f4xx_hal_cortex_c]::NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner(void*)
</UL>

<P><STRONG><a name="[be]"></a>HAL_InitTick</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32f4xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; [local to stm32f4xx_hal_cortex_c]::NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[bf]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[12b]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimInit()
</UL>

<P><STRONG><a name="[c2]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_NVIC_SetPriority &rArr; [local to stm32f4xx_hal_cortex_c]::NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to stm32f4xx_hal_cortex_c]::NVIC_GetPriorityGrouping()
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to stm32f4xx_hal_cortex_c]::NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimInit()
</UL>

<P><STRONG><a name="[bd]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[c5]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 680 bytes, Stack size 16 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; [local to stm32f4xx_hal_cortex_c]::NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config()
</UL>

<P><STRONG><a name="[c0]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[c6]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[c7]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1024 bytes, Stack size 16 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config()
</UL>

<P><STRONG><a name="[c8]"></a>HAL_SPI_Init</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, stm32f4xx_hal_spi.o(i.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SPI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiInit()
</UL>

<P><STRONG><a name="[c9]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(i.HAL_SPI_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[ca]"></a>HAL_SPI_Receive</STRONG> (Thumb, 570 bytes, Stack size 32 bytes, stm32f4xx_hal_spi.o(i.HAL_SPI_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; [local to stm32f4xx_hal_spi_c]::SPI_WaitOnFlagUntilTimeout(__SPI_HandleTypeDef*, unsigned, FlagStatus, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to stm32f4xx_hal_spi_c]::SPI_WaitOnFlagUntilTimeout(__SPI_HandleTypeDef*, unsigned, FlagStatus, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorMcu::SerialRead(unsigned char*, unsigned short)
</UL>

<P><STRONG><a name="[cd]"></a>HAL_SPI_Transmit</STRONG> (Thumb, 444 bytes, Stack size 24 bytes, stm32f4xx_hal_spi.o(i.HAL_SPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_SPI_Transmit &rArr; [local to stm32f4xx_hal_spi_c]::SPI_WaitOnFlagUntilTimeout(__SPI_HandleTypeDef*, unsigned, FlagStatus, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to stm32f4xx_hal_spi_c]::SPI_WaitOnFlagUntilTimeout(__SPI_HandleTypeDef*, unsigned, FlagStatus, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorMcu::SerialWrite(unsigned char*, unsigned short)
</UL>

<P><STRONG><a name="[cb]"></a>HAL_SPI_TransmitReceive</STRONG> (Thumb, 848 bytes, Stack size 40 bytes, stm32f4xx_hal_spi.o(i.HAL_SPI_TransmitReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_SPI_TransmitReceive &rArr; [local to stm32f4xx_hal_spi_c]::SPI_WaitOnFlagUntilTimeout(__SPI_HandleTypeDef*, unsigned, FlagStatus, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to stm32f4xx_hal_spi_c]::SPI_WaitOnFlagUntilTimeout(__SPI_HandleTypeDef*, unsigned, FlagStatus, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
</UL>

<P><STRONG><a name="[ce]"></a>HAL_SRAM_Init</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, stm32f4xx_hal_sram.o(i.HAL_SRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_SRAM_Init &rArr; FSMC_NORSRAM_Extended_Timing_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_MspInit
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAM_Timing_Init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAM_Init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAM_Extended_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HsramInit()
</UL>

<P><STRONG><a name="[cf]"></a>HAL_SRAM_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_sram.o(i.HAL_SRAM_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
</UL>

<P><STRONG><a name="[c1]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_SYSTICK_Config &rArr; [local to stm32f4xx_hal_cortex_c]::NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to stm32f4xx_hal_cortex_c]::NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[db]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_BreakCallback))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[dd]"></a>HAL_TIMEx_CommutationCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_CommutationCallback))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[d3]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_TIM_Base_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimInit()
</UL>

<P><STRONG><a name="[d4]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[12a]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_Start_IT))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimInit()
</UL>

<P><STRONG><a name="[d7]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[d6]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 406 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; SensorAdapter::TouchSensorIT() &rArr; SensorMcu::ReadPos() &rArr; SensorMcu::ReadY() &rArr; SensorMcu::Read(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutationCallback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_UP_TIM10_IRQHandler
</UL>

<P><STRONG><a name="[d8]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[d9]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[da]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, device.o(i.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HAL_TIM_PeriodElapsedCallback &rArr; SensorAdapter::TouchSensorIT() &rArr; SensorMcu::ReadPos() &rArr; SensorMcu::ReadY() &rArr; SensorMcu::Read(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunnbleInterface&lang;Runnable&rang;::reset(void*)
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorAdapter::TouchSensorIT()
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerFactory&lang;DefaultServerListener&rang;::invokeServer(int)
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::push(Runnable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[dc]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[13]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[221]"></a>StackSwitchPSV</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, vm.o(i.StackSwitchPSV), UNUSED)

<P><STRONG><a name="[6c]"></a>SystemInit</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, system_stm32f4xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(.text)
</UL>
<P><STRONG><a name="[33]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.TIM1_UP_TIM10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = TIM1_UP_TIM10_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; SensorAdapter::TouchSensorIT() &rArr; SensorMcu::ReadPos() &rArr; SensorMcu::ReadY() &rArr; SensorMcu::Read(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM2_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = TIM2_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; SensorAdapter::TouchSensorIT() &rArr; SensorMcu::ReadPos() &rArr; SensorMcu::ReadY() &rArr; SensorMcu::Read(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[d5]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[15]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f417xx.o(RESET)
</UL>
<P><STRONG><a name="[b6]"></a>VMHardFault</STRONG> (Thumb, 20 bytes, Stack size 32 bytes, vm.o(i.VMHardFault))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = VMHardFault &rArr; vmfault(SVC_arg) &rArr; ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;::fill(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; unsigned ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill&lang;unsigned short, Box&lang;int&rang;&rang;(T1*, T2) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::window(unsigned short, unsigned short, unsigned short, unsigned short) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::wrData8(unsigned char) &rArr; SpiSoftTypeDef::send_9bit_Data(bool, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmfault(SVC_arg)
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[e3]"></a>VMInit</STRONG> (Thumb, 14 bytes, Stack size 24 bytes, vm.o(i.VMInit), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vminit(unsigned, unsigned)
</UL>

<P><STRONG><a name="[b3]"></a>VMStart</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, vm.o(i.VMStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = VMStart &rArr; vmstart() &rArr; RunnbleInterface&lang;Runnable&rang;::getFrame(RuntimeFrame*)
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmstart()
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmstart
</UL>

<P><STRONG><a name="[b5]"></a>VMSvc</STRONG> (Thumb, 20 bytes, Stack size 32 bytes, vm.o(i.VMSvc))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = VMSvc &rArr; vmsvc(SVC_arg) &rArr; Runtime::dispatchSVC(SVC_arg) &rArr; Runtime::resolveAPICall(RuntimeFrame*, SVC_arg) &rArr; Runtime::addRunnable(int(*)(void*), char*, unsigned) &rArr; Runnable::init(int(*)(void*), unsigned, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmsvc(SVC_arg)
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>

<P><STRONG><a name="[b4]"></a>VMTick</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, vm.o(i.VMTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = VMTick &rArr; vmtick(void*) &rArr; Runtime::dispatch(void*) &rArr; void Runtime::runnablesTick&lang;Runtime*&rang;(T1) &rArr; Runtime::push(Runnable*) &rArr; ArrayListBase&lang;Runnable&rang;::addLast(Runnable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMSIS_Tick()
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmtick(void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[e7]"></a>CMSIS_Tick()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, device.o(i._Z10CMSIS_Tickv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CMSIS_Tick()
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VMTick
</UL>

<P><STRONG><a name="[f2]"></a>ClockEnable()</STRONG> (Thumb, 420 bytes, Stack size 8 bytes, init.o(i._Z11ClockEnablev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ClockEnable()
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner(void*)
</UL>

<P><STRONG><a name="[79]"></a>SystemEvent(void*)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(i._Z11SystemEventPv))
<BR>[Address Reference Count : 1]<UL><LI> main.o(i._Z18SystemEventBurner2Pv)
</UL>
<P><STRONG><a name="[7b]"></a>eventServer(void*)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, event.o(i._Z11eventServerPv))
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vm::close()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vm.o(i._ZN7Runtime4initEjj)
</UL>
<P><STRONG><a name="[7c]"></a>timerServer(void*)</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, timerserver.o(i._Z11timerServerPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timerServer(void*) &rArr; ServerInterface&lang;TimerListener&rang;::fireChannel(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vm::close()
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerInterface&lang;TimerListener&rang;::fireChannel(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vm.o(i._ZN7Runtime4initEjj)
</UL>
<P><STRONG><a name="[ed]"></a>DEV_Gpio_Init(GPIO_TypeDef*, int, unsigned, unsigned)</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, gpio_ex.o(i._Z13DEV_Gpio_InitP12GPIO_TypeDefijj))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DEV_Gpio_Init(GPIO_TypeDef*, int, unsigned, unsigned) &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioInit()
</UL>

<P><STRONG><a name="[103]"></a>Error_Handler()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, init.o(i._Z13Error_Handlerv))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HsramInit()
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimInit()
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiInit()
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DmaInit()
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config()
</UL>

<P><STRONG><a name="[ef]"></a>DEV_AltGpio_Init(GPIO_TypeDef*, int, unsigned, unsigned)</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, gpio_ex.o(i._Z16DEV_AltGpio_InitP12GPIO_TypeDefijj))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DEV_AltGpio_Init(GPIO_TypeDef*, int, unsigned, unsigned) &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioInit()
</UL>

<P><STRONG><a name="[74]"></a>PaneClickListener(TouchStruct)</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, main.o(i._Z17PaneClickListener11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PaneClickListener(TouchStruct) &rArr; Dimension&lang;int&rang;::setOrigins(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::setOrigins(Point&lang;int&rang;)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i._Z18SystemEventBurner2Pv)
</UL>
<P><STRONG><a name="[7a]"></a>SystemEventBurner(void*)</STRONG> (Thumb, 224 bytes, Stack size 72 bytes, main.o(i._Z17SystemEventBurnerPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = SystemEventBurner(void*) &rArr; Device::init() &rArr; GuiEngine::newContentPane(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; GContentPane&lang;unsigned short&rang;::GContentPane__sub_object(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; Graphic&lang;unsigned short&rang;::Graphic__sub_object(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; GCircle&lang;unsigned short&rang;::GCircle__sub_object(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; GPaneInterface&lang;unsigned short&rang;::operator ()(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; Dimension&lang;int&rang;::getBox()
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vm::addTimer(int(*)(void*), unsigned)
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vm::create(int(*)(void*), char*)
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vm::runtimeDispatchEvent(int(*)(void*))
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryAllocator::operator ()(unsigned, unsigned)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HsramInit()
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioInit()
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimInit()
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiInit()
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DmaInit()
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config()
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEnable()
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::operator =(Dimension&lang;int&rang;&)
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension(int, int, int, int)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension(Dimension&lang;int&rang;&)
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::init()
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::enableBackLight(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vm.o(i._ZN7Runtime4initEjj)
</UL>
<P><STRONG><a name="[7d]"></a>touchSensorServer(void*)</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, touchsensorapiinterface.o(i._Z17touchSensorServerPv))
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vm::close()
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vm::startCritical()
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vm::endCritical()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vm.o(i._ZN7Runtime4initEjj)
</UL>
<P><STRONG><a name="[f1]"></a>SystemClock_Config()</STRONG> (Thumb, 162 bytes, Stack size 80 bytes, init.o(i._Z18SystemClock_Configv))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = SystemClock_Config() &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; [local to stm32f4xx_hal_cortex_c]::NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetREVID
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler()
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner(void*)
</UL>

<P><STRONG><a name="[70]"></a>SystemEventBurner2(void*)</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, main.o(i._Z18SystemEventBurner2Pv))
<BR><BR>[Stack]<UL><LI>Max Depth = 420<LI>Call Chain = SystemEventBurner2(void*) &rArr; Device::render(unsigned short) &rArr; void ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;::fill&lang;unsigned short&rang;(GraphicFrame&lang;unsigned short, int&rang;*, ViewPort&, T1) &rArr; int ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill&lang;unsigned short, Box&lang;int&rang;, Box&lang;int&rang;&rang;(T1*, T2, T3, T1) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::window(unsigned short, unsigned short, unsigned short, unsigned short) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::wrData8(unsigned char) &rArr; SpiSoftTypeDef::send_9bit_Data(bool, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vm::pushEvent(int(*)(void*))
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vm::sleep(int)
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaletteComponent&lang;unsigned short&rang;::setBackground(unsigned short)
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaletteComponent&lang;unsigned short&rang;::getGraphic()
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::addTouchListener(int(*)(TouchStruct))
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::addClickListener(int(*)(TouchStruct))
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::render(unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i._Z17SystemEventBurnerPv)
</UL>
<P><STRONG><a name="[6f]"></a>SystemEventBurner3(void*)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, main.o(i._Z18SystemEventBurner3Pv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemEventBurner3(void*) &rArr; vm::sleep(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vm::sleep(int)
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::enableBackLight(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i._Z17SystemEventBurnerPv)
</UL>
<P><STRONG><a name="[72]"></a>labelClickListener(TouchStruct)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(i._Z18labelClickListener11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = labelClickListener(TouchStruct)
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSelectable&lang;unsigned short&rang;::setSelect()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i._Z18SystemEventBurner2Pv)
</UL>
<P><STRONG><a name="[73]"></a>labelTouchListener(TouchStruct)</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, main.o(i._Z18labelTouchListener11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = labelTouchListener(TouchStruct) &rArr; GLabel&lang;unsigned short&rang;::apendText(int) &rArr; VmOut&lang;char&rang;::print(int) &rArr; VmOut&lang;char&rang;::stringifyInt(char*, int, int) &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::apendText(int)
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::apendText(char*)
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::print(int)
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::clear()
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i._Z18SystemEventBurner2Pv)
</UL>
<P><STRONG><a name="[80]"></a>sensorClickHandler(void*)</STRONG> (Thumb, 68 bytes, Stack size 80 bytes, guiengine.o(i._Z18sensorClickHandlerPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = sensorClickHandler(void*) &rArr; GuiEngine::fireSensorClick(TouchStruct) &rArr; GContentPane&lang;unsigned short&rang;::fireSensorClickPane(TouchStruct) &rArr; int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorClick(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::fireSensorClick(TouchStruct)
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorAdapter::getData()
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiengine.o(i._ZN9GuiEngine12setListenersEv)
</UL>
<P><STRONG><a name="[82]"></a>sensorPressHandler(void*)</STRONG> (Thumb, 64 bytes, Stack size 80 bytes, guiengine.o(i._Z18sensorPressHandlerPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = sensorPressHandler(void*) &rArr; GuiEngine::fireSensorPress(TouchStruct) &rArr; GContentPane&lang;unsigned short&rang;::fireSensorPressPane(TouchStruct) &rArr; int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorPress(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::fireSensorPress(TouchStruct)
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorAdapter::getData()
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiengine.o(i._ZN9GuiEngine12setListenersEv)
</UL>
<P><STRONG><a name="[7f]"></a>sensorTouchHandler(void*)</STRONG> (Thumb, 64 bytes, Stack size 80 bytes, guiengine.o(i._Z18sensorTouchHandlerPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = sensorTouchHandler(void*) &rArr; GuiEngine::fireSensorTouch(TouchStruct) &rArr; GContentPane&lang;unsigned short&rang;::fireSensorTouchPane(TouchStruct) &rArr; int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorTouch(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::fireSensorTouch(TouchStruct)
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorAdapter::getData()
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiengine.o(i._ZN9GuiEngine12setListenersEv)
</UL>
<P><STRONG><a name="[75]"></a>SliderTouchListener(TouchStruct)</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, main.o(i._Z19SliderTouchListener11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SliderTouchListener(TouchStruct) &rArr; GLabel&lang;unsigned short&rang;::apendText(int) &rArr; VmOut&lang;char&rang;::print(int) &rArr; VmOut&lang;char&rang;::stringifyInt(char*, int, int) &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSlide&lang;unsigned short&rang;::setValue(int)
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSlide&lang;unsigned short&rang;::getValue()
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::apendText(int)
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::apendText(char*)
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::setText(char*)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSelectable&lang;unsigned short&rang;::setSelect()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i._Z18SystemEventBurner2Pv)
</UL>
<P><STRONG><a name="[76]"></a>Slider2TouchListener(TouchStruct)</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, main.o(i._Z20Slider2TouchListener11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Slider2TouchListener(TouchStruct) &rArr; GLabel&lang;unsigned short&rang;::apendText(int) &rArr; VmOut&lang;char&rang;::print(int) &rArr; VmOut&lang;char&rang;::stringifyInt(char*, int, int) &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSlide&lang;unsigned short&rang;::setValue(int)
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSlide&lang;unsigned short&rang;::getValue()
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::apendText(int)
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::apendText(char*)
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::setText(char*)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSelectable&lang;unsigned short&rang;::setSelect()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i._Z18SystemEventBurner2Pv)
</UL>
<P><STRONG><a name="[77]"></a>Slider3TouchListener(TouchStruct)</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, main.o(i._Z20Slider3TouchListener11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Slider3TouchListener(TouchStruct) &rArr; GLabel&lang;unsigned short&rang;::apendText(int) &rArr; VmOut&lang;char&rang;::print(int) &rArr; VmOut&lang;char&rang;::stringifyInt(char*, int, int) &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSlide&lang;unsigned short&rang;::setValue(int)
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSlide&lang;unsigned short&rang;::getValue()
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::apendText(int)
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::apendText(char*)
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::setText(char*)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSelectable&lang;unsigned short&rang;::setSelect()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i._Z18SystemEventBurner2Pv)
</UL>
<P><STRONG><a name="[78]"></a>Slider4TouchListener(TouchStruct)</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, main.o(i._Z20Slider4TouchListener11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Slider4TouchListener(TouchStruct) &rArr; GLabel&lang;unsigned short&rang;::apendText(int) &rArr; VmOut&lang;char&rang;::print(int) &rArr; VmOut&lang;char&rang;::stringifyInt(char*, int, int) &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSlide&lang;unsigned short&rang;::setValue(int)
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSlide&lang;unsigned short&rang;::getValue()
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::apendText(int)
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::apendText(char*)
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::setText(char*)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSelectable&lang;unsigned short&rang;::setSelect()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i._Z18SystemEventBurner2Pv)
</UL>
<P><STRONG><a name="[81]"></a>sensorReleaseHandler(void*)</STRONG> (Thumb, 64 bytes, Stack size 80 bytes, guiengine.o(i._Z20sensorReleaseHandlerPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = sensorReleaseHandler(void*) &rArr; GuiEngine::fireSensorRelease(TouchStruct) &rArr; GContentPane&lang;unsigned short&rang;::fireSensorReleasePane(TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorRelease(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::fireSensorRelease(TouchStruct)
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorAdapter::getData()
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiengine.o(i._ZN9GuiEngine12setListenersEv)
</UL>
<P><STRONG><a name="[87]"></a>WalkingManRepaintHook(void*)</STRONG> (Thumb, 306 bytes, Stack size 56 bytes, gametestwalkingman.o(i._Z21WalkingManRepaintHookPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WalkingManRepaintHook(void*) &rArr; WalkingManObject&lang;unsigned short&rang;::tick() &rArr; operator delete (void*) &rArr; Free(void*) &rArr; MemoryAllocator::Delete(void*) &rArr; MemoryAllocator::sanitize(ArrayListBase&lang;MemoryChunk&rang;&) &rArr; ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::getBox()
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WalkingManObject&lang;unsigned short&rang;::tick()
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GFill&lang;unsigned short&rang;::fill&lang;Box&lang;int&rang;, tImage&lang;unsigned short&rang;&rang;(T1, T2*, unsigned short, signed char)
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NonPaletteInterface&lang;unsigned short&rang;::getUserObject()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(t._ZN16WalkingManObjectItEC1EP19NonPaletteInterfaceItE)
</UL>
<P><STRONG><a name="[83]"></a>TextFieldsDEfaultCickListener(TouchStruct)</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, textfield.o(i._Z29TextFieldsDEfaultCickListener11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TextFieldsDEfaultCickListener(TouchStruct)
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTextField&lang;unsigned short&rang;::setSelectionStart(int)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTextField&lang;unsigned short&rang;::setSelectionEnd(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(t._ZN10GTextFieldItEC2EP7GraphicItE)
</UL>
<P><STRONG><a name="[88]"></a>DefaultWalkingManClickListener(TouchStruct)</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, gametestwalkingman.o(i._Z30DefaultWalkingManClickListener11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = DefaultWalkingManClickListener(TouchStruct) &rArr; WalkingManObject&lang;unsigned short&rang;::throwWeapon(int, int) &rArr; operator new(unsigned) &rArr; Alloc(unsigned) &rArr; MemoryAllocator::New(unsigned) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NonPaletteInterface&lang;unsigned short&rang;::getUserObject()
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WalkingManObject&lang;unsigned short&rang;::throwWeapon(int, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(t._ZN16WalkingManObjectItEC1EP19NonPaletteInterfaceItE)
</UL>
<P><STRONG><a name="[89]"></a>DefaultWalkingManTouchListener(TouchStruct)</STRONG> (Thumb, 24 bytes, Stack size 32 bytes, gametestwalkingman.o(i._Z30DefaultWalkingManTouchListener11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DefaultWalkingManTouchListener(TouchStruct)
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NonPaletteInterface&lang;unsigned short&rang;::getUserObject()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(t._ZN16WalkingManObjectItEC1EP19NonPaletteInterfaceItE)
</UL>
<P><STRONG><a name="[84]"></a>TextFieldsDEfaultTouchListener(TouchStruct)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, textfield.o(i._Z30TextFieldsDEfaultTouchListener11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TextFieldsDEfaultTouchListener(TouchStruct)
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTextField&lang;unsigned short&rang;::setSelectionEnd(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(t._ZN10GTextFieldItEC2EP7GraphicItE)
</UL>
<P><STRONG><a name="[8a]"></a>DefaultWalkingManReleaseListener(TouchStruct)</STRONG> (Thumb, 24 bytes, Stack size 32 bytes, gametestwalkingman.o(i._Z32DefaultWalkingManReleaseListener11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DefaultWalkingManReleaseListener(TouchStruct)
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NonPaletteInterface&lang;unsigned short&rang;::getUserObject()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(t._ZN16WalkingManObjectItEC1EP19NonPaletteInterfaceItE)
</UL>
<P><STRONG><a name="[85]"></a>TextFieldsDEfaultReleaseListener(TouchStruct)</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, textfield.o(i._Z32TextFieldsDEfaultReleaseListener11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TextFieldsDEfaultReleaseListener(TouchStruct)
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTextField&lang;unsigned short&rang;::setSelectionStart(int)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTextField&lang;unsigned short&rang;::setSelectionEnd(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(t._ZN10GTextFieldItEC2EP7GraphicItE)
</UL>
<P><STRONG><a name="[86]"></a>WalkingManThrowingWeaponRepaintHook(void*)</STRONG> (Thumb, 122 bytes, Stack size 56 bytes, gametestwalkingman.o(i._Z35WalkingManThrowingWeaponRepaintHookPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = WalkingManThrowingWeaponRepaintHook(void*) &rArr; void GFill&lang;unsigned short&rang;::fill&lang;Box&lang;int&rang;, const tImage&lang;unsigned short&rang;&rang;(T1, T2*, unsigned short, signed char)
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::getBox()
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GFill&lang;unsigned short&rang;::fill&lang;Box&lang;int&rang;, const tImage&lang;unsigned short&rang;&rang;(T1, T2*, unsigned short, signed char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gametestwalkingman.o(t._ZN16WalkingManObjectItE11throwWeaponEii)
</UL>
<P><STRONG><a name="[122]"></a>Free(void*)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, device.o(i._Z4FreePv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Free(void*) &rArr; MemoryAllocator::Delete(void*) &rArr; MemoryAllocator::sanitize(ArrayListBase&lang;MemoryChunk&rang;&) &rArr; ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryAllocator::Delete(void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Allocator&lang;void*&rang;::free(void*)
</UL>

<P><STRONG><a name="[124]"></a>Alloc(unsigned)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, device.o(i._Z5Allocj))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Alloc(unsigned) &rArr; MemoryAllocator::New(unsigned) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryAllocator::New(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Allocator&lang;void*&rang;::alloc(unsigned)
</UL>

<P><STRONG><a name="[6e]"></a>event(void*)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(i._Z5eventPv))
<BR>[Address Reference Count : 1]<UL><LI> main.o(i._Z17SystemEventBurnerPv)
</UL>
<P><STRONG><a name="[e6]"></a>vmsvc(SVC_arg)</STRONG> (Thumb, 26 bytes, Stack size 32 bytes, vm.o(i._Z5vmsvc7SVC_arg))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = vmsvc(SVC_arg) &rArr; Runtime::dispatchSVC(SVC_arg) &rArr; Runtime::resolveAPICall(RuntimeFrame*, SVC_arg) &rArr; Runtime::addRunnable(int(*)(void*), char*, unsigned) &rArr; Runnable::init(int(*)(void*), unsigned, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::dispatchSVC(SVC_arg)
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VMSvc
</UL>

<P><STRONG><a name="[71]"></a>timer0(void*)</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, main.o(i._Z6timer0Pv))
<BR>[Address Reference Count : 1]<UL><LI> main.o(i._Z17SystemEventBurnerPv)
</UL>
<P><STRONG><a name="[e4]"></a>vminit(unsigned, unsigned)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, vm.o(i._Z6vminitjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = vminit(unsigned, unsigned) &rArr; Runtime::init(unsigned, unsigned) &rArr; ServerFactory&lang;DefaultServerListener&rang;::installServer(int(*)(void*), int, int, char*, void*) &rArr; Runnable* ThreadFactory::newServer&lang;char&rang;(int(*)(void*), unsigned, unsigned, T1*) &rArr; Runnable::init(int(*)(void*), unsigned, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::init(unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vm::init(unsigned, unsigned)
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VMInit
</UL>

<P><STRONG><a name="[e8]"></a>vmtick(void*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, vm.o(i._Z6vmtickPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = vmtick(void*) &rArr; Runtime::dispatch(void*) &rArr; void Runtime::runnablesTick&lang;Runtime*&rang;(T1) &rArr; Runtime::push(Runnable*) &rArr; ArrayListBase&lang;Runnable&rang;::addLast(Runnable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::dispatch(void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VMTick
</UL>

<P><STRONG><a name="[f4]"></a>DmaInit()</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, init.o(i._Z7DmaInitv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DmaInit()
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler()
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner(void*)
</UL>

<P><STRONG><a name="[f5]"></a>SpiInit()</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, init.o(i._Z7SpiInitv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SpiInit() &rArr; HAL_SPI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler()
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner(void*)
</UL>

<P><STRONG><a name="[f6]"></a>TimInit()</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, init.o(i._Z7TimInitv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TimInit() &rArr; HAL_NVIC_SetPriority &rArr; [local to stm32f4xx_hal_cortex_c]::NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler()
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner(void*)
</UL>

<P><STRONG><a name="[e2]"></a>vmfault(SVC_arg)</STRONG> (Thumb, 566 bytes, Stack size 64 bytes, vm.o(i._Z7vmfault7SVC_arg))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = vmfault(SVC_arg) &rArr; ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;::fill(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; unsigned ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill&lang;unsigned short, Box&lang;int&rang;&rang;(T1*, T2) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::window(unsigned short, unsigned short, unsigned short, unsigned short) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::wrData8(unsigned char) &rArr; SpiSoftTypeDef::send_9bit_Data(bool, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorAdapter::TouchSensorIT()
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print::Print&lang;unsigned short&rang;::putChar(char, unsigned short, const tChar&lang;unsigned short&rang;*)
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::printHex(unsigned)
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::println(const char*)
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::print(char*)
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::print(const char*)
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;::fill(GraphicFrame&lang;unsigned short, int&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VMHardFault
</UL>

<P><STRONG><a name="[e5]"></a>vmstart()</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, vm.o(i._Z7vmstartv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = vmstart() &rArr; RunnbleInterface&lang;Runnable&rang;::getFrame(RuntimeFrame*)
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunnbleInterface&lang;Runnable&rang;::getFrame(RuntimeFrame*)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;Runnable&rang;::removeFirst()
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VMStart
</UL>

<P><STRONG><a name="[f7]"></a>GpioInit()</STRONG> (Thumb, 240 bytes, Stack size 8 bytes, init.o(i._Z8GpioInitv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GpioInit() &rArr; DEV_AltGpio_Init(GPIO_TypeDef*, int, unsigned, unsigned) &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEV_AltGpio_Init(GPIO_TypeDef*, int, unsigned, unsigned)
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEV_Gpio_Init(GPIO_TypeDef*, int, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner(void*)
</UL>

<P><STRONG><a name="[f3]"></a>HsramInit()</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, init.o(i._Z9HsramInitv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HsramInit() &rArr; HAL_SRAM_Init &rArr; FSMC_NORSRAM_Extended_Timing_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler()
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner(void*)
</UL>

<P><STRONG><a name="[1d0]"></a>RuntimeFrame::init(RuntimeFrame*)</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, vm.o(i._ZN12RuntimeFrame4initEPS_))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunnbleInterface&lang;Runnable&rang;::getFrame(RuntimeFrame*)
</UL>

<P><STRONG><a name="[de]"></a>SensorAdapter::TouchSensorIT()</STRONG> (Thumb, 292 bytes, Stack size 40 bytes, device.o(i._ZN13SensorAdapter13TouchSensorITEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SensorAdapter::TouchSensorIT() &rArr; SensorMcu::ReadPos() &rArr; SensorMcu::ReadY() &rArr; SensorMcu::Read(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorMcu::ReadPos()
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorMcu::ReadZ()
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmfault(SVC_arg)
</UL>

<P><STRONG><a name="[111]"></a>SensorAdapter::getData()</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, guiengine.o(i._ZN13SensorAdapter7getDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SensorAdapter::getData() &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensorReleaseHandler(void*)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensorTouchHandler(void*)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensorPressHandler(void*)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensorClickHandler(void*)
</UL>

<P><STRONG><a name="[137]"></a>SensorAdapter::operator ()()</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, vm.o(i._ZN13SensorAdapterclEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SensorAdapter::operator ()() &rArr; SensorMcu::Init(unsigned char, unsigned char, unsigned char) &rArr; SensorMcu::Apply(TouchMcuPreset&)
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorMcu::Init(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::init(unsigned, unsigned)
</UL>

<P><STRONG><a name="[139]"></a>ThreadFactory::ThreadFactory__sub_object()</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, device.o(i._ZN13ThreadFactoryC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ThreadFactory::ThreadFactory__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Allocator&lang;void*&rang;::Allocator()
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerFactory&lang;DefaultServerListener&rang;::ServerFactory__sub_object()
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::Runtime__sub_object()
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerInterface::TimerInterface__sub_object()
</UL>

<P><STRONG><a name="[13b]"></a>SpiSoftTypeDef::send_9bit_Data(bool, unsigned char)</STRONG> (Thumb, 136 bytes, Stack size 12 bytes, gpio_ex.o(i._ZN14SpiSoftTypeDef14send_9bit_DataEbh))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SpiSoftTypeDef::send_9bit_Data(bool, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiSoftTypeDef::deSelect()
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiSoftTypeDef::select()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::wrData8(unsigned char)
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::wrCmd8(unsigned char)
</UL>

<P><STRONG><a name="[13c]"></a>SpiSoftTypeDef::select()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gpio_ex.o(i._ZN14SpiSoftTypeDef6selectEv))
<BR><BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiSoftTypeDef::send_9bit_Data(bool, unsigned char)
</UL>

<P><STRONG><a name="[13d]"></a>SpiSoftTypeDef::deSelect()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gpio_ex.o(i._ZN14SpiSoftTypeDef8deSelectEv))
<BR><BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiSoftTypeDef::send_9bit_Data(bool, unsigned char)
</UL>

<P><STRONG><a name="[13e]"></a>TestGameEngine::TestGameEngine(GContentPane&lang;unsigned short&rang;*)</STRONG> (Thumb, 140 bytes, Stack size 56 bytes, main.o(i._ZN14TestGameEngineC1EP12GContentPaneItE))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = TestGameEngine::TestGameEngine(GContentPane&lang;unsigned short&rang;*) &rArr; WalkingManObject&lang;unsigned short&rang;::WalkingManObject(NonPaletteInterface&lang;unsigned short&rang;*) &rArr; GComponent&lang;unsigned short&rang;::addReleaseListener(int(*)(TouchStruct)) &rArr; GComponent&lang;unsigned short&rang;::addListener(ArrayListBase&lang;GComponentListener&rang;&, int(*)(TouchStruct)) &rArr; operator new(unsigned) &rArr; Alloc(unsigned) &rArr; MemoryAllocator::New(unsigned) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::setSize(int, int, int, int)
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NonPaletteInterface&lang;unsigned short&rang;::NonPaletteInterface__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaletteComponent&lang;unsigned short&rang;::setContentPane(void*)
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WalkingManObject&lang;unsigned short&rang;::WalkingManObject(NonPaletteInterface&lang;unsigned short&rang;*)
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;NonPaletteInterface&lang;unsigned short&rang;&rang;::addFirst(NonPaletteInterface&lang;unsigned short&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::init()
</UL>

<P><STRONG><a name="[222]"></a>TestGameEngine::TestGameEngine__sub_object(GContentPane&lang;unsigned short&rang;*)</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, main.o(i._ZN14TestGameEngineC1EP12GContentPaneItE), UNUSED)

<P><STRONG><a name="[145]"></a>TimerInterface::TimerInterface__sub_object()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, device.o(i._ZN14TimerInterfaceC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TimerInterface::TimerInterface__sub_object() &rArr; ThreadFactory::ThreadFactory__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Allocator&lang;void*&rang;::Allocator()
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFactory::ThreadFactory__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::Runtime__sub_object()
</UL>

<P><STRONG><a name="[146]"></a>TimerInterface::operator ()(int(*)(void*), unsigned, int, void*)</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, vm.o(i._ZN14TimerInterfaceclEPFiPvEjiS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = TimerInterface::operator ()(int(*)(void*), unsigned, int, void*) &rArr; Runnable* ThreadFactory::newServer&lang;char&rang;(int(*)(void*), unsigned, unsigned, T1*) &rArr; Runnable::init(int(*)(void*), unsigned, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1* Allocator&lang;void*&rang;::NewArray&lang;ArrayListBase&lang;TimerListener&rang;&rang;(unsigned)
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int Allocator&lang;void*&rang;::Delete&lang;ArrayListBase&lang;TimerListener&rang;&rang;(T1*)
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runnable* ThreadFactory::newServer&lang;char&rang;(int(*)(void*), unsigned, unsigned, T1*)
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::init(unsigned, unsigned)
</UL>

<P><STRONG><a name="[125]"></a>MemoryAllocator::New(unsigned)</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, memory_alloc.o(i._ZN15MemoryAllocator3NewEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = MemoryAllocator::New(unsigned) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk*)
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*)
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryAllocator::separate(MemoryChunk*, unsigned)
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::alloc(unsigned)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Alloc(unsigned)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::resolveAPICall(RuntimeFrame*, SVC_arg)
</UL>

<P><STRONG><a name="[123]"></a>MemoryAllocator::Delete(void*)</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, memory_alloc.o(i._ZN15MemoryAllocator6DeleteEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MemoryAllocator::Delete(void*) &rArr; MemoryAllocator::sanitize(ArrayListBase&lang;MemoryChunk&rang;&) &rArr; ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk*)
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*)
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryAllocator::sanitize(ArrayListBase&lang;MemoryChunk&rang;&)
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::free(void*)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free(void*)
</UL>

<P><STRONG><a name="[14e]"></a>MemoryAllocator::sanitize(ArrayListBase&lang;MemoryChunk&rang;&)</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, memory_alloc.o(i._ZN15MemoryAllocator8sanitizeER13ArrayListBaseI11MemoryChunkE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MemoryAllocator::sanitize(ArrayListBase&lang;MemoryChunk&rang;&) &rArr; ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk*)
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryAllocator::Delete(void*)
</UL>

<P><STRONG><a name="[14b]"></a>MemoryAllocator::separate(MemoryChunk*, unsigned)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, memory_alloc.o(i._ZN15MemoryAllocator8separateEP11MemoryChunkj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MemoryAllocator::separate(MemoryChunk*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryAllocator::New(unsigned)
</UL>

<P><STRONG><a name="[14f]"></a>MemoryAllocator::MemoryAllocator()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, device.o(i._ZN15MemoryAllocatorC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MemoryAllocator::MemoryAllocator()
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;MemoryChunk&rang;::ArrayListBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::Runtime__sub_object()
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___10_device_cpp_runtime
</UL>

<P><STRONG><a name="[223]"></a>MemoryAllocator::MemoryAllocator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, device.o(i._ZN15MemoryAllocatorC1Ev), UNUSED)

<P><STRONG><a name="[f8]"></a>MemoryAllocator::operator ()(unsigned, unsigned)</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, memory_alloc.o(i._ZN15MemoryAllocatorclEjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = MemoryAllocator::operator ()(unsigned, unsigned) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*)
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner(void*)
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::init(unsigned, unsigned)
</UL>

<P><STRONG><a name="[102]"></a>vm::endCritical()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, vmapi.o(i._ZN2vm11endCriticalEv))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchSensorServer(void*)
</UL>

<P><STRONG><a name="[101]"></a>vm::startCritical()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, vmapi.o(i._ZN2vm13startCriticalEv))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchSensorServer(void*)
</UL>

<P><STRONG><a name="[17f]"></a>vm::addSensorListener(int(*)(void*), int)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, vmapi.o(i._ZN2vm17addSensorListenerEPFiPvEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vm::addSensorListener(int(*)(void*), int)
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::setListeners()
</UL>

<P><STRONG><a name="[fb]"></a>vm::runtimeDispatchEvent(int(*)(void*))</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, vmapi.o(i._ZN2vm20runtimeDispatchEventEPFiPvE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vm::runtimeDispatchEvent(int(*)(void*))
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner(void*)
</UL>

<P><STRONG><a name="[151]"></a>vm::init(unsigned, unsigned)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, vmapi.o(i._ZN2vm4initEjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = vm::init(unsigned, unsigned) &rArr; vminit(unsigned, unsigned) &rArr; Runtime::init(unsigned, unsigned) &rArr; ServerFactory&lang;DefaultServerListener&rang;::installServer(int(*)(void*), int, int, char*, void*) &rArr; Runnable* ThreadFactory::newServer&lang;char&rang;(int(*)(void*), unsigned, unsigned, T1*) &rArr; Runnable::init(int(*)(void*), unsigned, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vminit(unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ea]"></a>vm::close()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, vmapi.o(i._ZN2vm5closeEv))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchSensorServer(void*)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerServer(void*)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eventServer(void*)
</UL>

<P><STRONG><a name="[10b]"></a>vm::sleep(int)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, vmapi.o(i._ZN2vm5sleepEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vm::sleep(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner3(void*)
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner2(void*)
</UL>

<P><STRONG><a name="[152]"></a>vm::start()</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, vmapi.o(i._ZN2vm5startEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = vm::start() &rArr; vmstart &rArr; VMStart &rArr; vmstart() &rArr; RunnbleInterface&lang;Runnable&rang;::getFrame(RuntimeFrame*)
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmstart
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fc]"></a>vm::create(int(*)(void*), char*)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, vmapi.o(i._ZN2vm6createEPFiPvEPc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vm::create(int(*)(void*), char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner(void*)
</UL>

<P><STRONG><a name="[fd]"></a>vm::addTimer(int(*)(void*), unsigned)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, vmapi.o(i._ZN2vm8addTimerEPFiPvEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vm::addTimer(int(*)(void*), unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner(void*)
</UL>

<P><STRONG><a name="[109]"></a>vm::pushEvent(int(*)(void*))</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, vmapi.o(i._ZN2vm9pushEventEPFiPvE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vm::pushEvent(int(*)(void*))
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner2(void*)
</UL>

<P><STRONG><a name="[fa]"></a>Device::enableBackLight(bool)</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(i._ZN6Device15enableBackLightEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Device::enableBackLight(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner3(void*)
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner(void*)
</UL>

<P><STRONG><a name="[f9]"></a>Device::init()</STRONG> (Thumb, 686 bytes, Stack size 96 bytes, main.o(i._ZN6Device4initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = Device::init() &rArr; GuiEngine::newContentPane(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; GContentPane&lang;unsigned short&rang;::GContentPane__sub_object(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; Graphic&lang;unsigned short&rang;::Graphic__sub_object(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; GCircle&lang;unsigned short&rang;::GCircle__sub_object(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; GPaneInterface&lang;unsigned short&rang;::operator ()(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; Dimension&lang;int&rang;::getBox()
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::setListeners()
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension(int, int, int, int)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension(Dimension&lang;int&rang;&)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::getWidth()
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::setSize(int, int, int, int)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::init()
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSlide&lang;unsigned short&rang;::setTop(int)
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::GLabel__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicFrame&lang;T1, T2&rang;* GraphicFrameFactory::newFrame&lang;unsigned short, int&rang;(Dimension&lang;T2&rang;)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaletteComponent&lang;unsigned short&rang;::setContentPane(void*)
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;GLabel&lang;unsigned short&rang;&rang;::addFirst(GLabel&lang;unsigned short&rang;&)
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;GTextField&lang;unsigned short&rang;&rang;::addFirst(GTextField&lang;unsigned short&rang;&)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::addSlider(GSlide&lang;unsigned short&rang;*)
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1* GContentPane&lang;unsigned short&rang;::createComponent&lang;GSlide&lang;unsigned short&rang;&rang;(unsigned, unsigned, unsigned, unsigned)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontFactory&lang;tFont&lang;unsigned short&rang;, char&rang;::collectFont(const tFont&lang;unsigned short&rang;*)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTextField&lang;unsigned short&rang;::GTextField__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::newContentPane(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestGameEngine::TestGameEngine(GContentPane&lang;unsigned short&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner(void*)
</UL>

<P><STRONG><a name="[10a]"></a>Device::render(unsigned short)</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, main.o(i._ZN6Device6renderEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = Device::render(unsigned short) &rArr; void ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;::fill&lang;unsigned short&rang;(GraphicFrame&lang;unsigned short, int&rang;*, ViewPort&, T1) &rArr; int ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill&lang;unsigned short, Box&lang;int&rang;, Box&lang;int&rang;&rang;(T1*, T2, T3, T1) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::window(unsigned short, unsigned short, unsigned short, unsigned short) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::wrData8(unsigned char) &rArr; SpiSoftTypeDef::send_9bit_Data(bool, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::setOrigins(Point&lang;int&rang;)
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WalkingManObject&lang;unsigned short&rang;::tick()
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;::fill&lang;unsigned short&rang;(GraphicFrame&lang;unsigned short, int&rang;*, ViewPort&, T1)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GContentPane&lang;unsigned short&rang;::repaint&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GContentPane&lang;unsigned short&rang;::repaint&lang;GSlide&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GContentPane&lang;unsigned short&rang;::repaint&lang;GLabel&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GContentPane&lang;unsigned short&rang;::repaint&lang;NonPaletteInterface&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GContentPane&lang;unsigned short&rang;::repaint&lang;GraphicObject&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GContentPane&lang;unsigned short&rang;::repaint&lang;GTextField&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::getViewPort()
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner2(void*)
</UL>

<P><STRONG><a name="[168]"></a>Device::Device()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, device.o(i._ZN6DeviceC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Device::Device() &rArr; GuiEngine::GuiEngine()
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::GuiEngine()
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___10_device_cpp_runtime
</UL>

<P><STRONG><a name="[224]"></a>Device::Device__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, device.o(i._ZN6DeviceC1Ev), UNUSED)

<P><STRONG><a name="[16a]"></a>Runtime::addRunnable(int(*)(void*), char*, unsigned)</STRONG> (Thumb, 102 bytes, Stack size 56 bytes, vm.o(i._ZN7Runtime11addRunnableEPFiPvEPcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Runtime::addRunnable(int(*)(void*), char*, unsigned) &rArr; Runnable::init(int(*)(void*), unsigned, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1* Allocator&lang;void*&rang;::New&lang;Runnable&rang;(unsigned)
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void Runnable::setName&lang;char&rang;(T1*)
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;Runnable&rang;::addLast(Runnable*)
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runnable::init(int(*)(void*), unsigned, int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::resolveAPICall(RuntimeFrame*, SVC_arg)
</UL>

<P><STRONG><a name="[126]"></a>Runtime::dispatchSVC(SVC_arg)</STRONG> (Thumb, 118 bytes, Stack size 72 bytes, vm.o(i._ZN7Runtime11dispatchSVCE7SVC_arg))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Runtime::dispatchSVC(SVC_arg) &rArr; Runtime::resolveAPICall(RuntimeFrame*, SVC_arg) &rArr; Runtime::addRunnable(int(*)(void*), char*, unsigned) &rArr; Runnable::init(int(*)(void*), unsigned, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Synchronize&lang;Runtime&rang;::~Synchronize()
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunnbleInterface&lang;Runnable&rang;::getFrame(RuntimeFrame*)
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Synchronize&lang;Runtime&rang;::Synchronize(Runtime*)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runnable::setFrame(RuntimeFrame*)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::resolveAPICall(RuntimeFrame*, SVC_arg)
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmsvc(SVC_arg)
</UL>

<P><STRONG><a name="[173]"></a>Runtime::getAvailable(int)</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, vm.o(i._ZN7Runtime12getAvailableEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Runtime::getAvailable(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;Runnable&rang;::removeFirst()
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::dispatch(void*)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::resolveAPICall(RuntimeFrame*, SVC_arg)
</UL>

<P><STRONG><a name="[172]"></a>Runtime::resolveAPICall(RuntimeFrame*, SVC_arg)</STRONG> (Thumb, 378 bytes, Stack size 64 bytes, vm.o(i._ZN7Runtime14resolveAPICallEP12RuntimeFrame7SVC_arg))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Runtime::resolveAPICall(RuntimeFrame*, SVC_arg) &rArr; Runtime::addRunnable(int(*)(void*), char*, unsigned) &rArr; Runnable::init(int(*)(void*), unsigned, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryAllocator::New(unsigned)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1* Allocator&lang;void*&rang;::New&lang;TimerListener&rang;()
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunnbleInterface&lang;Runnable&rang;::getFrame(RuntimeFrame*)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerInterface&lang;TimerListener&rang;::addListener(TimerListener*, unsigned)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerFactory&lang;DefaultServerListener&rang;::addServerListener(int(*)(void*), int, int)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerFactory&lang;DefaultServerListener&rang;::invokeServer(int)
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;Runnable&rang;::addFirst(Runnable*)
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::push(Runnable*)
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::getAvailable(int)
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::addRunnable(int(*)(void*), char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::dispatchSVC(SVC_arg)
</UL>

<P><STRONG><a name="[94]"></a>Runtime::free(void*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, device.o(i._ZN7Runtime4freeEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Runtime::free(void*) &rArr; MemoryAllocator::Delete(void*) &rArr; MemoryAllocator::sanitize(ArrayListBase&lang;MemoryChunk&rang;&) &rArr; ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryAllocator::Delete(void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thunk{v:0,-16} to Runtime::free(void*)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thunk{-204} to Runtime::free(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device.o(.constdata__ZTV7Runtime)
</UL>
<P><STRONG><a name="[127]"></a>Runtime::init(unsigned, unsigned)</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, vm.o(i._ZN7Runtime4initEjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Runtime::init(unsigned, unsigned) &rArr; ServerFactory&lang;DefaultServerListener&rang;::installServer(int(*)(void*), int, int, char*, void*) &rArr; Runnable* ThreadFactory::newServer&lang;char&rang;(int(*)(void*), unsigned, unsigned, T1*) &rArr; Runnable::init(int(*)(void*), unsigned, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryAllocator::operator ()(unsigned, unsigned)
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runnable* ThreadFactory::newServer&lang;const char&rang;(int(*)(void*), unsigned, unsigned, T1*)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerFactory&lang;DefaultServerListener&rang;::installServer(int(*)(void*), int, int, char*, void*)
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;Runnable&rang;::addFirst(Runnable*)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerInterface::operator ()(int(*)(void*), unsigned, int, void*)
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorAdapter::operator ()()
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vminit(unsigned, unsigned)
</UL>

<P><STRONG><a name="[e0]"></a>Runtime::push(Runnable*)</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, vm.o(i._ZN7Runtime4pushEP8Runnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Runtime::push(Runnable*) &rArr; ArrayListBase&lang;Runnable&rang;::addLast(Runnable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Synchronize&lang;Runtime&rang;::~Synchronize()
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;Runnable&rang;::addLast(Runnable*)
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Synchronize&lang;Runtime&rang;::Synchronize(Runtime*)
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void Runtime::runnablesTick&lang;Runtime*&rang;(T1)
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::dispatch(void*)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::resolveAPICall(RuntimeFrame*, SVC_arg)
</UL>

<P><STRONG><a name="[93]"></a>Runtime::alloc(unsigned)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, device.o(i._ZN7Runtime5allocEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Runtime::alloc(unsigned) &rArr; MemoryAllocator::New(unsigned) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryAllocator::New(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thunk{v:0,-12} to Runtime::alloc(unsigned)
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thunk{-204} to Runtime::alloc(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device.o(.constdata__ZTV7Runtime)
</UL>
<P><STRONG><a name="[128]"></a>Runtime::dispatch(void*)</STRONG> (Thumb, 180 bytes, Stack size 56 bytes, vm.o(i._ZN7Runtime8dispatchEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Runtime::dispatch(void*) &rArr; void Runtime::runnablesTick&lang;Runtime*&rang;(T1) &rArr; Runtime::push(Runnable*) &rArr; ArrayListBase&lang;Runnable&rang;::addLast(Runnable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Synchronize&lang;Runtime&rang;::~Synchronize()
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void Runtime::runnablesTick&lang;Runtime*&rang;(T1)
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunnbleInterface&lang;Runnable&rang;::getFrame(RuntimeFrame*)
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Synchronize&lang;Runtime&rang;::Synchronize(Runtime*)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runnable::setFrame(RuntimeFrame*)
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::push(Runnable*)
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::getAvailable(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmtick(void*)
</UL>

<P><STRONG><a name="[17b]"></a>Runtime::Runtime__sub_object()</STRONG> (Thumb, 274 bytes, Stack size 16 bytes, device.o(i._ZN7RuntimeC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Runtime::Runtime__sub_object() &rArr; ServerFactory&lang;DefaultServerListener&rang;::ServerFactory__sub_object() &rArr; ThreadFactory::ThreadFactory__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerFactory&lang;DefaultServerListener&rang;::ServerFactory__sub_object()
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;Runnable&rang;::ArrayListBase()
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Allocator&lang;void*&rang;::Allocator()
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryAllocator::MemoryAllocator()
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerInterface::TimerInterface__sub_object()
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFactory::ThreadFactory__sub_object()
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___10_device_cpp_runtime
</UL>

<P><STRONG><a name="[16c]"></a>Runnable::init(int(*)(void*), unsigned, int, int, int)</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, vm.o(i._ZN8Runnable4initEPFiPvEjiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Runnable::init(int(*)(void*), unsigned, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runnable::initTcb(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runnable* ThreadFactory::newServer&lang;char&rang;(int(*)(void*), unsigned, unsigned, T1*)
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runnable* ThreadFactory::newServer&lang;const char&rang;(int(*)(void*), unsigned, unsigned, T1*)
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::addRunnable(int(*)(void*), char*, unsigned)
</UL>

<P><STRONG><a name="[17e]"></a>Runnable::initTcb(unsigned)</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, vm.o(i._ZN8Runnable7initTcbEj))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runnable::init(int(*)(void*), unsigned, int, int, int)
</UL>

<P><STRONG><a name="[171]"></a>Runnable::setFrame(RuntimeFrame*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, vm.o(i._ZN8Runnable8setFrameEP12RuntimeFrame))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::dispatch(void*)
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::dispatchSVC(SVC_arg)
</UL>

<P><STRONG><a name="[183]"></a>ViewPort::getTrueView()</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, guiengine.o(i._ZN8ViewPort11getTrueViewEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ViewPort::getTrueView()
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::fireSensorRelease(TouchStruct)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::fireSensorTouch(TouchStruct)
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::fireSensorPress(TouchStruct)
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::fireSensorClick(TouchStruct)
</UL>

<P><STRONG><a name="[182]"></a>ViewPort::setTrueView(Point&lang;int&rang;)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, guiengine.o(i._ZN8ViewPort11setTrueViewE5PointIiE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ViewPort::setTrueView(Point&lang;int&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::fireSensorTouch(TouchStruct)
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::fireSensorClick(TouchStruct)
</UL>

<P><STRONG><a name="[1c1]"></a>ViewPort::testTrueViewPoint(int, int)</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, main.o(i._ZN8ViewPort17testTrueViewPointEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ViewPort::testTrueViewPoint(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::test(ViewPort&, Box&lang;int&rang;)
</UL>

<P><STRONG><a name="[13a]"></a>Allocator&lang;void*&rang;::Allocator()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, device.o(i._ZN9AllocatorIPvEC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerFactory&lang;DefaultServerListener&rang;::ServerFactory__sub_object()
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::Runtime__sub_object()
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerInterface::TimerInterface__sub_object()
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFactory::ThreadFactory__sub_object()
</UL>

<P><STRONG><a name="[225]"></a>Allocator&lang;void*&rang;::Allocator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, device.o(i._ZN9AllocatorIPvEC1Ev), UNUSED)

<P><STRONG><a name="[160]"></a>GuiEngine::getViewPort()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(i._ZN9GuiEngine11getViewPortEv))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::render(unsigned short)
</UL>

<P><STRONG><a name="[154]"></a>GuiEngine::setListeners()</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, guiengine.o(i._ZN9GuiEngine12setListenersEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GuiEngine::setListeners() &rArr; vm::addSensorListener(int(*)(void*), int)
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vm::addSensorListener(int(*)(void*), int)
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::init()
</UL>

<P><STRONG><a name="[157]"></a>GuiEngine::newContentPane(GraphicFrame&lang;unsigned short, int&rang;*)</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, main.o(i._ZN9GuiEngine14newContentPaneEP12GraphicFrameItiE))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = GuiEngine::newContentPane(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; GContentPane&lang;unsigned short&rang;::GContentPane__sub_object(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; Graphic&lang;unsigned short&rang;::Graphic__sub_object(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; GCircle&lang;unsigned short&rang;::GCircle__sub_object(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; GPaneInterface&lang;unsigned short&rang;::operator ()(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; Dimension&lang;int&rang;::getBox()
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaletteComponent&lang;unsigned short&rang;::getGraphic()
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;GContentPane&lang;unsigned short&rang;&rang;::addFirst(GContentPane&lang;unsigned short&rang;&)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::GContentPane__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::init()
</UL>

<P><STRONG><a name="[113]"></a>GuiEngine::fireSensorClick(TouchStruct)</STRONG> (Thumb, 116 bytes, Stack size 88 bytes, guiengine.o(i._ZN9GuiEngine15fireSensorClickE11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = GuiEngine::fireSensorClick(TouchStruct) &rArr; GContentPane&lang;unsigned short&rang;::fireSensorClickPane(TouchStruct) &rArr; int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorClick(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;GContentPane&lang;unsigned short&rang;&rang;::getFirst()
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorClickPane(TouchStruct)
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPort::setTrueView(Point&lang;int&rang;)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPort::getTrueView()
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensorClickHandler(void*)
</UL>

<P><STRONG><a name="[114]"></a>GuiEngine::fireSensorPress(TouchStruct)</STRONG> (Thumb, 104 bytes, Stack size 88 bytes, guiengine.o(i._ZN9GuiEngine15fireSensorPressE11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = GuiEngine::fireSensorPress(TouchStruct) &rArr; GContentPane&lang;unsigned short&rang;::fireSensorPressPane(TouchStruct) &rArr; int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorPress(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;GContentPane&lang;unsigned short&rang;&rang;::getFirst()
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorPressPane(TouchStruct)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPort::getTrueView()
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensorPressHandler(void*)
</UL>

<P><STRONG><a name="[115]"></a>GuiEngine::fireSensorTouch(TouchStruct)</STRONG> (Thumb, 174 bytes, Stack size 88 bytes, guiengine.o(i._ZN9GuiEngine15fireSensorTouchE11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = GuiEngine::fireSensorTouch(TouchStruct) &rArr; GContentPane&lang;unsigned short&rang;::fireSensorTouchPane(TouchStruct) &rArr; int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorTouch(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;GContentPane&lang;unsigned short&rang;&rang;::getFirst()
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorTouchPane(TouchStruct)
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPort::setTrueView(Point&lang;int&rang;)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPort::getTrueView()
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensorTouchHandler(void*)
</UL>

<P><STRONG><a name="[119]"></a>GuiEngine::fireSensorRelease(TouchStruct)</STRONG> (Thumb, 94 bytes, Stack size 88 bytes, guiengine.o(i._ZN9GuiEngine17fireSensorReleaseE11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GuiEngine::fireSensorRelease(TouchStruct) &rArr; GContentPane&lang;unsigned short&rang;::fireSensorReleasePane(TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorRelease(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;GContentPane&lang;unsigned short&rang;&rang;::getFirst()
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorReleasePane(TouchStruct)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPort::getTrueView()
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensorReleaseHandler(void*)
</UL>

<P><STRONG><a name="[169]"></a>GuiEngine::GuiEngine()</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, device.o(i._ZN9GuiEngineC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GuiEngine::GuiEngine()
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::Device()
</UL>

<P><STRONG><a name="[226]"></a>GuiEngine::GuiEngine__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, device.o(i._ZN9GuiEngineC1Ev), UNUSED)

<P><STRONG><a name="[99]"></a>SensorMcu::SerialRead(unsigned char*, unsigned short)</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, device.o(i._ZN9SensorMcu10SerialReadEPht))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SensorMcu::SerialRead(unsigned char*, unsigned short) &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; [local to stm32f4xx_hal_spi_c]::SPI_WaitOnFlagUntilTimeout(__SPI_HandleTypeDef*, unsigned, FlagStatus, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device.o(.constdata__ZTV9SensorMcu)
</UL>
<P><STRONG><a name="[9a]"></a>SensorMcu::SerialWrite(unsigned char*, unsigned short)</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, device.o(i._ZN9SensorMcu11SerialWriteEPht))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SensorMcu::SerialWrite(unsigned char*, unsigned short) &rArr; HAL_SPI_Transmit &rArr; [local to stm32f4xx_hal_spi_c]::SPI_WaitOnFlagUntilTimeout(__SPI_HandleTypeDef*, unsigned, FlagStatus, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device.o(.constdata__ZTV9SensorMcu)
</UL>
<P><STRONG><a name="[138]"></a>SensorMcu::Init(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, tsc2046.o(i._ZN9SensorMcu4InitEhhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SensorMcu::Init(unsigned char, unsigned char, unsigned char) &rArr; SensorMcu::Apply(TouchMcuPreset&)
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorMcu::Apply(TouchMcuPreset&)
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorAdapter::operator ()()
</UL>

<P><STRONG><a name="[18b]"></a>SensorMcu::Read(unsigned char)</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, tsc2046.o(i._ZN9SensorMcu4ReadEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SensorMcu::Read(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorMcu::ReadY()
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorMcu::ReadX()
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorMcu::ReadZ()
</UL>

<P><STRONG><a name="[189]"></a>SensorMcu::Apply(TouchMcuPreset&)</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, tsc2046.o(i._ZN9SensorMcu5ApplyER14TouchMcuPreset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SensorMcu::Apply(TouchMcuPreset&)
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorMcu::Init(unsigned char, unsigned char, unsigned char)
</UL>

<P><STRONG><a name="[18a]"></a>SensorMcu::ReadX()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tsc2046.o(i._ZN9SensorMcu5ReadXEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SensorMcu::ReadX() &rArr; SensorMcu::Read(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorMcu::Read(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorMcu::ReadPos()
</UL>

<P><STRONG><a name="[18c]"></a>SensorMcu::ReadY()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tsc2046.o(i._ZN9SensorMcu5ReadYEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SensorMcu::ReadY() &rArr; SensorMcu::Read(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorMcu::Read(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorMcu::ReadPos()
</UL>

<P><STRONG><a name="[134]"></a>SensorMcu::ReadZ()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tsc2046.o(i._ZN9SensorMcu5ReadZEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SensorMcu::ReadZ() &rArr; SensorMcu::Read(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorMcu::Read(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorAdapter::TouchSensorIT()
</UL>

<P><STRONG><a name="[135]"></a>SensorMcu::ReadPos()</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, tsc2046.o(i._ZN9SensorMcu7ReadPosEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SensorMcu::ReadPos() &rArr; SensorMcu::ReadY() &rArr; SensorMcu::Read(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorMcu::ReadY()
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorMcu::ReadX()
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorAdapter::TouchSensorIT()
</UL>

<P><STRONG><a name="[98]"></a>thunk{-204} to Runtime::free(void*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, device.o(i._ZThn204_N7Runtime4freeEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = thunk{-204} to Runtime::free(void*) &rArr; Runtime::free(void*) &rArr; MemoryAllocator::Delete(void*) &rArr; MemoryAllocator::sanitize(ArrayListBase&lang;MemoryChunk&rang;&) &rArr; ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::free(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device.o(.constdata__ZTV7Runtime)
</UL>
<P><STRONG><a name="[97]"></a>thunk{-204} to Runtime::alloc(unsigned)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, device.o(i._ZThn204_N7Runtime5allocEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = thunk{-204} to Runtime::alloc(unsigned) &rArr; Runtime::alloc(unsigned) &rArr; MemoryAllocator::New(unsigned) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::alloc(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device.o(.constdata__ZTV7Runtime)
</UL>
<P><STRONG><a name="[95]"></a>thunk{v:0,-12} to Runtime::alloc(unsigned)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, device.o(i._ZTv0_n12_N7Runtime5allocEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = thunk{v:0,-12} to Runtime::alloc(unsigned) &rArr; Runtime::alloc(unsigned) &rArr; MemoryAllocator::New(unsigned) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::alloc(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device.o(.constdata__ZTV7Runtime)
</UL>
<P><STRONG><a name="[96]"></a>thunk{v:0,-16} to Runtime::free(void*)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, device.o(i._ZTv0_n16_N7Runtime4freeEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = thunk{v:0,-16} to Runtime::free(void*) &rArr; Runtime::free(void*) &rArr; MemoryAllocator::Delete(void*) &rArr; MemoryAllocator::sanitize(ArrayListBase&lang;MemoryChunk&rang;&) &rArr; ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::free(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device.o(.constdata__ZTV7Runtime)
</UL>
<P><STRONG><a name="[18d]"></a>operator delete (void*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, device.o(i._ZdlPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = operator delete (void*) &rArr; Free(void*) &rArr; MemoryAllocator::Delete(void*) &rArr; MemoryAllocator::sanitize(ArrayListBase&lang;MemoryChunk&rang;&) &rArr; ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free(void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicFrame&lang;T1, T2&rang;* GraphicFrameFactory::newFrame&lang;unsigned short, int&rang;(Dimension&lang;T2&rang;)
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WalkingManObject&lang;unsigned short&rang;::tick()
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontFactory&lang;tFont&lang;unsigned short&rang;, char&rang;::collectFont(const tFont&lang;unsigned short&rang;*)
</UL>

<P><STRONG><a name="[18e]"></a>operator new[] (unsigned)</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, array_new.o(i._Znaj))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; Alloc(unsigned) &rArr; MemoryAllocator::New(unsigned) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicFrame&lang;T1, T2&rang;* GraphicFrameFactory::newFrame&lang;unsigned short, int&rang;(Dimension&lang;T2&rang;)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontFactory&lang;tFont&lang;unsigned short&rang;, char&rang;::collectFont(const tFont&lang;unsigned short&rang;*)
</UL>

<P><STRONG><a name="[13f]"></a>operator new(unsigned)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, device.o(i._Znwj))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = operator new(unsigned) &rArr; Alloc(unsigned) &rArr; MemoryAllocator::New(unsigned) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Alloc(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayList&lang;FontCharSet&lang;tFont&lang;unsigned short&rang;, char&rang;&rang;::addFirst(FontCharSet&lang;tFont&lang;unsigned short&rang;, char&rang;&)
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicFrame&lang;T1, T2&rang;* GraphicFrameFactory::newFrame&lang;unsigned short, int&rang;(Dimension&lang;T2&rang;)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::GContentPane__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1* GContentPane&lang;unsigned short&rang;::createComponent&lang;GSlide&lang;unsigned short&rang;&rang;(unsigned, unsigned, unsigned, unsigned)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontFactory&lang;tFont&lang;unsigned short&rang;, char&rang;::collectFont(const tFont&lang;unsigned short&rang;*)
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::addListener(ArrayListBase&lang;GComponentListener&rang;&, int(*)(TouchStruct))
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::newContentPane(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::init()
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestGameEngine::TestGameEngine(GContentPane&lang;unsigned short&rang;*)
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WalkingManObject&lang;unsigned short&rang;::throwWeapon(int, int)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
</UL>

<P><STRONG><a name="[17d]"></a>__aeabi_vec_ctor_nocookie_nodtor</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, aeabi_vec_ctor_nocookie_nodtor.o(i.__aeabi_vec_ctor_nocookie_nodtor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::Runtime__sub_object()
</UL>

<P><STRONG><a name="[eb]"></a>__cxa_guard_acquire</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cxa_guard_acquire.o(i.__cxa_guard_acquire))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;labelTouchListener(TouchStruct)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerServer(void*)
</UL>

<P><STRONG><a name="[ab]"></a>main</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = main &rArr; vm::init(unsigned, unsigned) &rArr; vminit(unsigned, unsigned) &rArr; Runtime::init(unsigned, unsigned) &rArr; ServerFactory&lang;DefaultServerListener&rang;::installServer(int(*)(void*), int, int, char*, void*) &rArr; Runnable* ThreadFactory::newServer&lang;char&rang;(int(*)(void*), unsigned, unsigned, T1*) &rArr; Runnable::init(int(*)(void*), unsigned, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vm::start()
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vm::init(unsigned, unsigned)
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill(unsigned short, unsigned short, unsigned short)
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Synchronize&lang;ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;&rang;::~Synchronize()
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Synchronize&lang;ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;&rang;::Synchronize(ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[193]"></a>GComponent&lang;unsigned short&rang;::addListener(ArrayListBase&lang;GComponentListener&rang;&, int(*)(TouchStruct))</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, main.o(t._ZN10GComponentItE11addListenerER13ArrayListBaseI18GComponentListenerEPFi11TouchStructE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GComponent&lang;unsigned short&rang;::addListener(ArrayListBase&lang;GComponentListener&rang;&, int(*)(TouchStruct)) &rArr; operator new(unsigned) &rArr; Alloc(unsigned) &rArr; MemoryAllocator::New(unsigned) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::addReleaseListener(int(*)(TouchStruct))
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::addTouchListener(int(*)(TouchStruct))
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::addClickListener(int(*)(TouchStruct))
</UL>

<P><STRONG><a name="[194]"></a>int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)</STRONG> (Thumb, 174 bytes, Stack size 88 bytes, guiengine.o(t._ZN10GComponentItE13fireListenersI18GComponentListenerEEiR13ArrayListBaseIT_E11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorRelease(TouchStruct)
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorTouch(TouchStruct)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorPress(TouchStruct)
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorClick(TouchStruct)
</UL>

<P><STRONG><a name="[196]"></a>GComponent&lang;unsigned short&rang;::fireSensorClick(TouchStruct)</STRONG> (Thumb, 40 bytes, Stack size 48 bytes, guiengine.o(t._ZN10GComponentItE15fireSensorClickE11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GComponent&lang;unsigned short&rang;::fireSensorClick(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;GSlide&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;GLabel&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;NonPaletteInterface&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;GTextField&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
</UL>

<P><STRONG><a name="[197]"></a>GComponent&lang;unsigned short&rang;::fireSensorPress(TouchStruct)</STRONG> (Thumb, 40 bytes, Stack size 48 bytes, guiengine.o(t._ZN10GComponentItE15fireSensorPressE11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GComponent&lang;unsigned short&rang;::fireSensorPress(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorPressPane(TouchStruct)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;GSlide&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;GLabel&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;NonPaletteInterface&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;GTextField&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
</UL>

<P><STRONG><a name="[198]"></a>GComponent&lang;unsigned short&rang;::fireSensorTouch(TouchStruct)</STRONG> (Thumb, 38 bytes, Stack size 48 bytes, guiengine.o(t._ZN10GComponentItE15fireSensorTouchE11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GComponent&lang;unsigned short&rang;::fireSensorTouch(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorTouchPane(TouchStruct)
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;GSlide&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;GLabel&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;NonPaletteInterface&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;GTextField&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
</UL>

<P><STRONG><a name="[106]"></a>GComponent&lang;unsigned short&rang;::addClickListener(int(*)(TouchStruct))</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, main.o(t._ZN10GComponentItE16addClickListenerEPFi11TouchStructE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GComponent&lang;unsigned short&rang;::addClickListener(int(*)(TouchStruct)) &rArr; GComponent&lang;unsigned short&rang;::addListener(ArrayListBase&lang;GComponentListener&rang;&, int(*)(TouchStruct)) &rArr; operator new(unsigned) &rArr; Alloc(unsigned) &rArr; MemoryAllocator::New(unsigned) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::addListener(ArrayListBase&lang;GComponentListener&rang;&, int(*)(TouchStruct))
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WalkingManObject&lang;unsigned short&rang;::WalkingManObject(NonPaletteInterface&lang;unsigned short&rang;*)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTextField&lang;unsigned short&rang;::GTextField__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner2(void*)
</UL>

<P><STRONG><a name="[107]"></a>GComponent&lang;unsigned short&rang;::addTouchListener(int(*)(TouchStruct))</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, main.o(t._ZN10GComponentItE16addTouchListenerEPFi11TouchStructE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GComponent&lang;unsigned short&rang;::addTouchListener(int(*)(TouchStruct)) &rArr; GComponent&lang;unsigned short&rang;::addListener(ArrayListBase&lang;GComponentListener&rang;&, int(*)(TouchStruct)) &rArr; operator new(unsigned) &rArr; Alloc(unsigned) &rArr; MemoryAllocator::New(unsigned) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::addListener(ArrayListBase&lang;GComponentListener&rang;&, int(*)(TouchStruct))
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WalkingManObject&lang;unsigned short&rang;::WalkingManObject(NonPaletteInterface&lang;unsigned short&rang;*)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTextField&lang;unsigned short&rang;::GTextField__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner2(void*)
</UL>

<P><STRONG><a name="[199]"></a>GComponent&lang;unsigned short&rang;::fireSensorRelease(TouchStruct)</STRONG> (Thumb, 40 bytes, Stack size 48 bytes, guiengine.o(t._ZN10GComponentItE17fireSensorReleaseE11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GComponent&lang;unsigned short&rang;::fireSensorRelease(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorReleasePane(TouchStruct)
</UL>

<P><STRONG><a name="[19a]"></a>GComponent&lang;unsigned short&rang;::addReleaseListener(int(*)(TouchStruct))</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, main.o(t._ZN10GComponentItE18addReleaseListenerEPFi11TouchStructE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GComponent&lang;unsigned short&rang;::addReleaseListener(int(*)(TouchStruct)) &rArr; GComponent&lang;unsigned short&rang;::addListener(ArrayListBase&lang;GComponentListener&rang;&, int(*)(TouchStruct)) &rArr; operator new(unsigned) &rArr; Alloc(unsigned) &rArr; MemoryAllocator::New(unsigned) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::addListener(ArrayListBase&lang;GComponentListener&rang;&, int(*)(TouchStruct))
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WalkingManObject&lang;unsigned short&rang;::WalkingManObject(NonPaletteInterface&lang;unsigned short&rang;*)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTextField&lang;unsigned short&rang;::GTextField__sub_object(Graphic&lang;unsigned short&rang;*)
</UL>

<P><STRONG><a name="[19b]"></a>GComponent&lang;unsigned short&rang;::GComponent__sub_object()</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, main.o(t._ZN10GComponentItEC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GComponent&lang;unsigned short&rang;::GComponent__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension()
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;GComponentListener&rang;::ArrayListBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSlide&lang;unsigned short&rang;::GSlide__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::GLabel__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NonPaletteInterface&lang;unsigned short&rang;::NonPaletteInterface__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::GContentPane__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTextField&lang;unsigned short&rang;::GTextField__sub_object(Graphic&lang;unsigned short&rang;*)
</UL>

<P><STRONG><a name="[19e]"></a>int GRectangle&lang;unsigned short&rang;::fillRectPart&lang;Box&lang;int&rang;&rang;(T1, unsigned short)</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, main.o(t._ZN10GRectangleItE12fillRectPartI3BoxIiEEEiT_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = int GRectangle&lang;unsigned short&rang;::fillRectPart&lang;Box&lang;int&rang;&rang;(T1, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GRectangle&lang;unsigned short&rang;::rectangle&lang;Box&lang;int&rang;&rang;(T1, unsigned, unsigned short)
</UL>

<P><STRONG><a name="[19d]"></a>int GRectangle&lang;unsigned short&rang;::rectangle&lang;Box&lang;int&rang;&rang;(T1, unsigned, unsigned short)</STRONG> (Thumb, 154 bytes, Stack size 104 bytes, main.o(t._ZN10GRectangleItE9rectangleI3BoxIiEEEiT_jt))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = int GRectangle&lang;unsigned short&rang;::rectangle&lang;Box&lang;int&rang;&rang;(T1, unsigned, unsigned short) &rArr; int GRectangle&lang;unsigned short&rang;::fillRectPart&lang;Box&lang;int&rang;&rang;(T1, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GRectangle&lang;unsigned short&rang;::fillRectPart&lang;Box&lang;int&rang;&rang;(T1, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSelectable&lang;unsigned short&rang;::drawSelection()
</UL>

<P><STRONG><a name="[19f]"></a>GRectangle&lang;unsigned short&rang;::GRectangle__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, main.o(t._ZN10GRectangleItEC2EP12GraphicFrameItiE))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = GRectangle&lang;unsigned short&rang;::GRectangle__sub_object(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; GPaneInterface&lang;unsigned short&rang;::operator ()(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; Dimension&lang;int&rang;::getBox()
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension()
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaneInterface&lang;unsigned short&rang;::operator ()(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaneInterface&lang;unsigned short&rang;::GPaneInterface__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic&lang;unsigned short&rang;::Graphic__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
</UL>

<P><STRONG><a name="[11f]"></a>GTextField&lang;unsigned short&rang;::setSelectionEnd(int)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, textfield.o(t._ZN10GTextFieldItE15setSelectionEndEi))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextFieldsDEfaultReleaseListener(TouchStruct)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextFieldsDEfaultTouchListener(TouchStruct)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextFieldsDEfaultCickListener(TouchStruct)
</UL>

<P><STRONG><a name="[11e]"></a>GTextField&lang;unsigned short&rang;::setSelectionStart(int)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, textfield.o(t._ZN10GTextFieldItE17setSelectionStartEi))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextFieldsDEfaultReleaseListener(TouchStruct)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextFieldsDEfaultCickListener(TouchStruct)
</UL>

<P><STRONG><a name="[8e]"></a>GTextField&lang;unsigned short&rang;::repaint()</STRONG> (Thumb, 338 bytes, Stack size 88 bytes, main.o(t._ZN10GTextFieldItE7repaintEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = GTextField&lang;unsigned short&rang;::repaint() &rArr; Dimension&lang;T1&rang;& print::DrawString&lang;unsigned short&rang;::drawString&lang;int&rang;(Dimension&lang;T1&rang;, char*, unsigned short, bool, bool) &rArr; print::DrawString&lang;unsigned short&rang;::putChar(Dimension&lang;int&rang;, char, unsigned short, const tChar&lang;unsigned short&rang;*, bool) &rArr; int print::DrawString&lang;unsigned short&rang;::drawScaledChar&lang;const tImage&lang;unsigned short&rang;&rang;(Dimension&lang;int&rang;, T1*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension(int, int, int, int)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension(Dimension&lang;int&rang;&)
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;T1&rang;& print::DrawString&lang;unsigned short&rang;::drawString&lang;int&rang;(Dimension&lang;T1&rang;, char*, unsigned short, bool, bool)
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GFill&lang;unsigned short&rang;::fill(int, int, int, int, unsigned short)
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GFill&lang;unsigned short&rang;::fill(Dimension&lang;int&rang;, unsigned short)
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSelectable&lang;unsigned short&rang;::drawSelection()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata__ZTV10GTextFieldItE)
</UL>
<P><STRONG><a name="[15a]"></a>GTextField&lang;unsigned short&rang;::GTextField__sub_object(Graphic&lang;unsigned short&rang;*)</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, main.o(t._ZN10GTextFieldItEC2EP7GraphicItE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GTextField&lang;unsigned short&rang;::GTextField__sub_object(Graphic&lang;unsigned short&rang;*) &rArr; GComponent&lang;unsigned short&rang;::addReleaseListener(int(*)(TouchStruct)) &rArr; GComponent&lang;unsigned short&rang;::addListener(ArrayListBase&lang;GComponentListener&rang;&, int(*)(TouchStruct)) &rArr; operator new(unsigned) &rArr; Alloc(unsigned) &rArr; MemoryAllocator::New(unsigned) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension()
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::VmOut(char*, unsigned)
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaletteComponent&lang;unsigned short&rang;::GPaletteComponent__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSelectable&lang;unsigned short&rang;::GSelectable__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSelectable&lang;unsigned short&rang;::setSelectBorderWidth(unsigned)
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::GComponent__sub_object()
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::addReleaseListener(int(*)(TouchStruct))
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::addTouchListener(int(*)(TouchStruct))
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::addClickListener(int(*)(TouchStruct))
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::init()
</UL>

<P><STRONG><a name="[1aa]"></a>Line_Class&lang;unsigned short&rang;::DrawDdaBold(int, int, int, int, unsigned short)</STRONG> (Thumb, 322 bytes, Stack size 88 bytes, main.o(t._ZN10Line_ClassItE11DrawDdaBoldEiiiit))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Line_Class&lang;unsigned short&rang;::DrawDdaBold(int, int, int, int, unsigned short) &rArr; Line_Class&lang;unsigned short&rang;::fBotToTop(int, int, int, unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line_Class&lang;unsigned short&rang;::fBotToTop(int, int, int, unsigned short, unsigned char)
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line_Class&lang;unsigned short&rang;::fLeftToRight(int, int, int, unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int Line_Class&lang;unsigned short&rang;::lineBold&lang;Point&lang;int&rang;&rang;(T1, T1, unsigned short)
</UL>

<P><STRONG><a name="[1ac]"></a>Line_Class&lang;unsigned short&rang;::fLeftToRight(int, int, int, unsigned short, unsigned char)</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, main.o(t._ZN10Line_ClassItE12fLeftToRightEiiith))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Line_Class&lang;unsigned short&rang;::fLeftToRight(int, int, int, unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line_Class&lang;unsigned short&rang;::DrawDdaBold(int, int, int, int, unsigned short)
</UL>

<P><STRONG><a name="[1ad]"></a>int Line_Class&lang;unsigned short&rang;::lineBold&lang;Point&lang;int&rang;&rang;(T1, T1, unsigned short)</STRONG> (Thumb, 30 bytes, Stack size 40 bytes, main.o(t._ZN10Line_ClassItE8lineBoldI5PointIiEEEiT_S4_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = int Line_Class&lang;unsigned short&rang;::lineBold&lang;Point&lang;int&rang;&rang;(T1, T1, unsigned short) &rArr; Line_Class&lang;unsigned short&rang;::DrawDdaBold(int, int, int, int, unsigned short) &rArr; Line_Class&lang;unsigned short&rang;::fBotToTop(int, int, int, unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line_Class&lang;unsigned short&rang;::DrawDdaBold(int, int, int, int, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSlide&lang;unsigned short&rang;::repaint()
</UL>

<P><STRONG><a name="[1ab]"></a>Line_Class&lang;unsigned short&rang;::fBotToTop(int, int, int, unsigned short, unsigned char)</STRONG> (Thumb, 102 bytes, Stack size 20 bytes, main.o(t._ZN10Line_ClassItE9fBotToTopEiiith))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Line_Class&lang;unsigned short&rang;::fBotToTop(int, int, int, unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line_Class&lang;unsigned short&rang;::DrawDdaBold(int, int, int, int, unsigned short)
</UL>

<P><STRONG><a name="[1ae]"></a>Line_Class&lang;unsigned short&rang;::Line_Class__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, main.o(t._ZN10Line_ClassItEC2EP12GraphicFrameItiE))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Line_Class&lang;unsigned short&rang;::Line_Class__sub_object(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; GPaneInterface&lang;unsigned short&rang;::operator ()(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; Dimension&lang;int&rang;::getBox()
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension()
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaneInterface&lang;unsigned short&rang;::operator ()(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaneInterface&lang;unsigned short&rang;::GPaneInterface__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic&lang;unsigned short&rang;::Graphic__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
</UL>

<P><STRONG><a name="[1d8]"></a>FontCharSet&lang;tFont&lang;unsigned short&rang;, char&rang;::getH()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(t._ZN11FontCharSetI5tFontItEcE4getHEv))
<BR><BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;T1&rang;& print::DrawString&lang;unsigned short&rang;::drawString&lang;int&rang;(Dimension&lang;T1&rang;, char*, unsigned short, bool, bool)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print::Print&lang;unsigned short&rang;::putChar(char, unsigned short, const tChar&lang;unsigned short&rang;*)
</UL>

<P><STRONG><a name="[153]"></a>FontFactory&lang;tFont&lang;unsigned short&rang;, char&rang;::collectFont(const tFont&lang;unsigned short&rang;*)</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, main.o(t._ZN11FontFactoryI5tFontItEcE11collectFontEPKS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = FontFactory&lang;tFont&lang;unsigned short&rang;, char&rang;::collectFont(const tFont&lang;unsigned short&rang;*) &rArr; ArrayList&lang;FontCharSet&lang;tFont&lang;unsigned short&rang;, char&rang;&rang;::addFirst(FontCharSet&lang;tFont&lang;unsigned short&rang;, char&rang;&) &rArr; operator new(unsigned) &rArr; Alloc(unsigned) &rArr; MemoryAllocator::New(unsigned) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayList&lang;FontCharSet&lang;tFont&lang;unsigned short&rang;, char&rang;&rang;::addFirst(FontCharSet&lang;tFont&lang;unsigned short&rang;, char&rang;&)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::init()
</UL>

<P><STRONG><a name="[1a4]"></a>GSelectable&lang;unsigned short&rang;::drawSelection()</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, main.o(t._ZN11GSelectableItE13drawSelectionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GSelectable&lang;unsigned short&rang;::drawSelection() &rArr; int GRectangle&lang;unsigned short&rang;::rectangle&lang;Box&lang;int&rang;&rang;(T1, unsigned, unsigned short) &rArr; int GRectangle&lang;unsigned short&rang;::fillRectPart&lang;Box&lang;int&rang;&rang;(T1, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::getBox()
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GRectangle&lang;unsigned short&rang;::rectangle&lang;Box&lang;int&rang;&rang;(T1, unsigned, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSlide&lang;unsigned short&rang;::repaint()
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::repaint()
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTextField&lang;unsigned short&rang;::repaint()
</UL>

<P><STRONG><a name="[1a9]"></a>GSelectable&lang;unsigned short&rang;::setSelectBorderWidth(unsigned)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(t._ZN11GSelectableItE20setSelectBorderWidthEj))
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSlide&lang;unsigned short&rang;::GSlide__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::GLabel__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NonPaletteInterface&lang;unsigned short&rang;::NonPaletteInterface__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTextField&lang;unsigned short&rang;::GTextField__sub_object(Graphic&lang;unsigned short&rang;*)
</UL>

<P><STRONG><a name="[10c]"></a>GSelectable&lang;unsigned short&rang;::setSelect()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(t._ZN11GSelectableItE9setSelectEv))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider4TouchListener(TouchStruct)
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider3TouchListener(TouchStruct)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider2TouchListener(TouchStruct)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderTouchListener(TouchStruct)
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;labelClickListener(TouchStruct)
</UL>

<P><STRONG><a name="[1a7]"></a>GSelectable&lang;unsigned short&rang;::GSelectable__sub_object(Graphic&lang;unsigned short&rang;*)</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, main.o(t._ZN11GSelectableItEC2EP7GraphicItE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GSelectable&lang;unsigned short&rang;::GSelectable__sub_object(Graphic&lang;unsigned short&rang;*) &rArr; GPaletteComponent&lang;unsigned short&rang;::GPaletteComponent__sub_object(Graphic&lang;unsigned short&rang;*)
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension()
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaletteComponent&lang;unsigned short&rang;::GPaletteComponent__sub_object(Graphic&lang;unsigned short&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSlide&lang;unsigned short&rang;::GSlide__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::GLabel__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NonPaletteInterface&lang;unsigned short&rang;::NonPaletteInterface__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTextField&lang;unsigned short&rang;::GTextField__sub_object(Graphic&lang;unsigned short&rang;*)
</UL>

<P><STRONG><a name="[190]"></a>Synchronize&lang;ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;&rang;::Synchronize(ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;*)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main.o(t._ZN11SynchronizeI12ScreenDriverI7ILI9488I12GPIO_TypeDef14SpiSoftTypeDefE12GraphicFrameItiEEEC1EPS7_))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;::fill&lang;unsigned short&rang;(GraphicFrame&lang;unsigned short, int&rang;*, ViewPort&, T1)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[227]"></a>Synchronize&lang;ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;&rang;::Synchronize__sub_object(ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;*)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, main.o(t._ZN11SynchronizeI12ScreenDriverI7ILI9488I12GPIO_TypeDef14SpiSoftTypeDefE12GraphicFrameItiEEEC1EPS7_), UNUSED)

<P><STRONG><a name="[191]"></a>Synchronize&lang;ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;&rang;::~Synchronize()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(t._ZN11SynchronizeI12ScreenDriverI7ILI9488I12GPIO_TypeDef14SpiSoftTypeDefE12GraphicFrameItiEEED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;::fill&lang;unsigned short&rang;(GraphicFrame&lang;unsigned short, int&rang;*, ViewPort&, T1)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;::fill(GraphicFrame&lang;unsigned short, int&rang;*)
</UL>

<P><STRONG><a name="[228]"></a>Synchronize&lang;ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;&rang;::~Synchronize__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, main.o(t._ZN11SynchronizeI12ScreenDriverI7ILI9488I12GPIO_TypeDef14SpiSoftTypeDefE12GraphicFrameItiEEED1Ev), UNUSED)

<P><STRONG><a name="[16f]"></a>Synchronize&lang;Runtime&rang;::Synchronize(Runtime*)</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, vm.o(t._ZN11SynchronizeI7RuntimeEC1EPS0_))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::dispatch(void*)
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::push(Runnable*)
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::dispatchSVC(SVC_arg)
</UL>

<P><STRONG><a name="[229]"></a>Synchronize&lang;Runtime&rang;::Synchronize__sub_object(Runtime*)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, vm.o(t._ZN11SynchronizeI7RuntimeEC1EPS0_), UNUSED)

<P><STRONG><a name="[170]"></a>Synchronize&lang;Runtime&rang;::~Synchronize()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, device.o(t._ZN11SynchronizeI7RuntimeED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::dispatch(void*)
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::push(Runnable*)
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::dispatchSVC(SVC_arg)
</UL>

<P><STRONG><a name="[22a]"></a>Synchronize&lang;Runtime&rang;::~Synchronize__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, device.o(t._ZN11SynchronizeI7RuntimeED1Ev), UNUSED)

<P><STRONG><a name="[1d1]"></a>GContentPane&lang;unsigned short&rang;::addGraphic(GraphicObject&lang;unsigned short&rang;*)</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, gametestwalkingman.o(t._ZN12GContentPaneItE10addGraphicEP13GraphicObjectItE))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GContentPane&lang;unsigned short&rang;::addGraphic(GraphicObject&lang;unsigned short&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WalkingManObject&lang;unsigned short&rang;::throwWeapon(int, int)
</UL>

<P><STRONG><a name="[159]"></a>T1* GContentPane&lang;unsigned short&rang;::createComponent&lang;GSlide&lang;unsigned short&rang;&rang;(unsigned, unsigned, unsigned, unsigned)</STRONG> (Thumb, 88 bytes, Stack size 56 bytes, main.o(t._ZN12GContentPaneItE15createComponentI6GSlideItEEEPT_jjjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = T1* GContentPane&lang;unsigned short&rang;::createComponent&lang;GSlide&lang;unsigned short&rang;&rang;(unsigned, unsigned, unsigned, unsigned) &rArr; operator new(unsigned) &rArr; Alloc(unsigned) &rArr; MemoryAllocator::New(unsigned) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::setSize(int, int, int, int)
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSlide&lang;unsigned short&rang;::GSlide__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaletteComponent&lang;unsigned short&rang;::setContentPane(void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::init()
</UL>

<P><STRONG><a name="[1b1]"></a>int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;GTextField&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)</STRONG> (Thumb, 128 bytes, Stack size 48 bytes, guiengine.o(t._ZN12GContentPaneItE15fireSensorClickI10GTextFieldItEEEiR13ArrayListBaseIT_E11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;GTextField&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorClick(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorClick(TouchStruct)
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorClickPane(TouchStruct)
</UL>

<P><STRONG><a name="[1b2]"></a>int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;NonPaletteInterface&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)</STRONG> (Thumb, 128 bytes, Stack size 48 bytes, guiengine.o(t._ZN12GContentPaneItE15fireSensorClickI19NonPaletteInterfaceItEEEiR13ArrayListBaseIT_E11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;NonPaletteInterface&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorClick(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorClick(TouchStruct)
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorClickPane(TouchStruct)
</UL>

<P><STRONG><a name="[1b3]"></a>int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;GLabel&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)</STRONG> (Thumb, 128 bytes, Stack size 48 bytes, guiengine.o(t._ZN12GContentPaneItE15fireSensorClickI6GLabelItEEEiR13ArrayListBaseIT_E11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;GLabel&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorClick(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorClick(TouchStruct)
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorClickPane(TouchStruct)
</UL>

<P><STRONG><a name="[1b4]"></a>int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;GSlide&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, guiengine.o(t._ZN12GContentPaneItE15fireSensorClickI6GSlideItEEEiR13ArrayListBaseIT_E11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;GSlide&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorClick(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorClick(TouchStruct)
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorClickPane(TouchStruct)
</UL>

<P><STRONG><a name="[1b5]"></a>int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)</STRONG> (Thumb, 128 bytes, Stack size 48 bytes, guiengine.o(t._ZN12GContentPaneItE15fireSensorClickI7GButtonItEEEiR13ArrayListBaseIT_E11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorClick(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorClick(TouchStruct)
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorClickPane(TouchStruct)
</UL>

<P><STRONG><a name="[1b6]"></a>int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;GTextField&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, guiengine.o(t._ZN12GContentPaneItE15fireSensorPressI10GTextFieldItEEEiR13ArrayListBaseIT_E11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;GTextField&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorPress(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorPress(TouchStruct)
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorPressPane(TouchStruct)
</UL>

<P><STRONG><a name="[1b7]"></a>int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;NonPaletteInterface&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, guiengine.o(t._ZN12GContentPaneItE15fireSensorPressI19NonPaletteInterfaceItEEEiR13ArrayListBaseIT_E11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;NonPaletteInterface&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorPress(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorPress(TouchStruct)
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorPressPane(TouchStruct)
</UL>

<P><STRONG><a name="[1b8]"></a>int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;GLabel&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, guiengine.o(t._ZN12GContentPaneItE15fireSensorPressI6GLabelItEEEiR13ArrayListBaseIT_E11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;GLabel&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorPress(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorPress(TouchStruct)
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorPressPane(TouchStruct)
</UL>

<P><STRONG><a name="[1b9]"></a>int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;GSlide&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)</STRONG> (Thumb, 116 bytes, Stack size 48 bytes, guiengine.o(t._ZN12GContentPaneItE15fireSensorPressI6GSlideItEEEiR13ArrayListBaseIT_E11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;GSlide&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorPress(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorPress(TouchStruct)
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorPressPane(TouchStruct)
</UL>

<P><STRONG><a name="[1ba]"></a>int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, guiengine.o(t._ZN12GContentPaneItE15fireSensorPressI7GButtonItEEEiR13ArrayListBaseIT_E11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorPress(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorPress(TouchStruct)
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorPressPane(TouchStruct)
</UL>

<P><STRONG><a name="[1bb]"></a>int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;GTextField&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, guiengine.o(t._ZN12GContentPaneItE15fireSensorTouchI10GTextFieldItEEEiR13ArrayListBaseIT_E11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;GTextField&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorTouch(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorTouch(TouchStruct)
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorTouchPane(TouchStruct)
</UL>

<P><STRONG><a name="[1bc]"></a>int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;NonPaletteInterface&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, guiengine.o(t._ZN12GContentPaneItE15fireSensorTouchI19NonPaletteInterfaceItEEEiR13ArrayListBaseIT_E11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;NonPaletteInterface&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorTouch(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorTouch(TouchStruct)
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorTouchPane(TouchStruct)
</UL>

<P><STRONG><a name="[1bd]"></a>int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;GLabel&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, guiengine.o(t._ZN12GContentPaneItE15fireSensorTouchI6GLabelItEEEiR13ArrayListBaseIT_E11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;GLabel&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorTouch(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorTouch(TouchStruct)
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorTouchPane(TouchStruct)
</UL>

<P><STRONG><a name="[1be]"></a>int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;GSlide&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)</STRONG> (Thumb, 98 bytes, Stack size 48 bytes, guiengine.o(t._ZN12GContentPaneItE15fireSensorTouchI6GSlideItEEEiR13ArrayListBaseIT_E11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;GSlide&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorTouch(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorTouch(TouchStruct)
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorTouchPane(TouchStruct)
</UL>

<P><STRONG><a name="[1bf]"></a>int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, guiengine.o(t._ZN12GContentPaneItE15fireSensorTouchI7GButtonItEEEiR13ArrayListBaseIT_E11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorTouch(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorTouch(TouchStruct)
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorTouchPane(TouchStruct)
</UL>

<P><STRONG><a name="[185]"></a>GContentPane&lang;unsigned short&rang;::fireSensorClickPane(TouchStruct)</STRONG> (Thumb, 232 bytes, Stack size 48 bytes, guiengine.o(t._ZN12GContentPaneItE19fireSensorClickPaneE11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = GContentPane&lang;unsigned short&rang;::fireSensorClickPane(TouchStruct) &rArr; int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorClick(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;GSlide&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;GLabel&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;NonPaletteInterface&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;GTextField&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::fireSensorClick(TouchStruct)
</UL>

<P><STRONG><a name="[186]"></a>GContentPane&lang;unsigned short&rang;::fireSensorPressPane(TouchStruct)</STRONG> (Thumb, 434 bytes, Stack size 48 bytes, guiengine.o(t._ZN12GContentPaneItE19fireSensorPressPaneE11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = GContentPane&lang;unsigned short&rang;::fireSensorPressPane(TouchStruct) &rArr; int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorPress(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;GSlide&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;GLabel&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;NonPaletteInterface&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;GTextField&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorPress(TouchStruct)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::fireSensorPress(TouchStruct)
</UL>

<P><STRONG><a name="[187]"></a>GContentPane&lang;unsigned short&rang;::fireSensorTouchPane(TouchStruct)</STRONG> (Thumb, 428 bytes, Stack size 48 bytes, guiengine.o(t._ZN12GContentPaneItE19fireSensorTouchPaneE11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = GContentPane&lang;unsigned short&rang;::fireSensorTouchPane(TouchStruct) &rArr; int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorTouch(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;GSlide&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;GLabel&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;NonPaletteInterface&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;GTextField&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorTouch(TouchStruct)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::fireSensorTouch(TouchStruct)
</UL>

<P><STRONG><a name="[188]"></a>GContentPane&lang;unsigned short&rang;::fireSensorReleasePane(TouchStruct)</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, guiengine.o(t._ZN12GContentPaneItE21fireSensorReleasePaneE11TouchStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GContentPane&lang;unsigned short&rang;::fireSensorReleasePane(TouchStruct) &rArr; GComponent&lang;unsigned short&rang;::fireSensorRelease(TouchStruct) &rArr; int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct) &rArr; Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::fireSensorRelease(TouchStruct)
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::fireSensorRelease(TouchStruct)
</UL>

<P><STRONG><a name="[1c0]"></a>GContentPane&lang;unsigned short&rang;::test(ViewPort&, Box&lang;int&rang;)</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, main.o(t._ZN12GContentPaneItE4testER8ViewPort3BoxIiE))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GContentPane&lang;unsigned short&rang;::test(ViewPort&, Box&lang;int&rang;) &rArr; ViewPort::testTrueViewPoint(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPort::testTrueViewPoint(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GContentPane&lang;unsigned short&rang;::repaint&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GContentPane&lang;unsigned short&rang;::repaint&lang;GSlide&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GContentPane&lang;unsigned short&rang;::repaint&lang;GLabel&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GContentPane&lang;unsigned short&rang;::repaint&lang;NonPaletteInterface&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GContentPane&lang;unsigned short&rang;::repaint&lang;GraphicObject&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GContentPane&lang;unsigned short&rang;::repaint&lang;GTextField&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)
</UL>

<P><STRONG><a name="[161]"></a>void GContentPane&lang;unsigned short&rang;::repaint&lang;GTextField&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, main.o(t._ZN12GContentPaneItE7repaintI10GTextFieldItEEEvR13ArrayListBaseIT_ER8ViewPort))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = void GContentPane&lang;unsigned short&rang;::repaint&lang;GTextField&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&) &rArr; GContentPane&lang;unsigned short&rang;::test(ViewPort&, Box&lang;int&rang;) &rArr; ViewPort::testTrueViewPoint(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::getBox()
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaletteComponent&lang;unsigned short&rang;::getForceRepaint()
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::test(ViewPort&, Box&lang;int&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::render(unsigned short)
</UL>

<P><STRONG><a name="[166]"></a>void GContentPane&lang;unsigned short&rang;::repaint&lang;GraphicObject&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, main.o(t._ZN12GContentPaneItE7repaintI13GraphicObjectItEEEvR13ArrayListBaseIT_ER8ViewPort))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = void GContentPane&lang;unsigned short&rang;::repaint&lang;GraphicObject&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&) &rArr; GContentPane&lang;unsigned short&rang;::test(ViewPort&, Box&lang;int&rang;) &rArr; ViewPort::testTrueViewPoint(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::getBox()
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaletteComponent&lang;unsigned short&rang;::getForceRepaint()
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::test(ViewPort&, Box&lang;int&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::render(unsigned short)
</UL>

<P><STRONG><a name="[165]"></a>void GContentPane&lang;unsigned short&rang;::repaint&lang;NonPaletteInterface&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, main.o(t._ZN12GContentPaneItE7repaintI19NonPaletteInterfaceItEEEvR13ArrayListBaseIT_ER8ViewPort))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = void GContentPane&lang;unsigned short&rang;::repaint&lang;NonPaletteInterface&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&) &rArr; GContentPane&lang;unsigned short&rang;::test(ViewPort&, Box&lang;int&rang;) &rArr; ViewPort::testTrueViewPoint(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::getBox()
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaletteComponent&lang;unsigned short&rang;::getForceRepaint()
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::test(ViewPort&, Box&lang;int&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::render(unsigned short)
</UL>

<P><STRONG><a name="[163]"></a>void GContentPane&lang;unsigned short&rang;::repaint&lang;GLabel&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, main.o(t._ZN12GContentPaneItE7repaintI6GLabelItEEEvR13ArrayListBaseIT_ER8ViewPort))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = void GContentPane&lang;unsigned short&rang;::repaint&lang;GLabel&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&) &rArr; GContentPane&lang;unsigned short&rang;::test(ViewPort&, Box&lang;int&rang;) &rArr; ViewPort::testTrueViewPoint(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::getBox()
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaletteComponent&lang;unsigned short&rang;::getForceRepaint()
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::test(ViewPort&, Box&lang;int&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::render(unsigned short)
</UL>

<P><STRONG><a name="[162]"></a>void GContentPane&lang;unsigned short&rang;::repaint&lang;GSlide&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, main.o(t._ZN12GContentPaneItE7repaintI6GSlideItEEEvR13ArrayListBaseIT_ER8ViewPort))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = void GContentPane&lang;unsigned short&rang;::repaint&lang;GSlide&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&) &rArr; GContentPane&lang;unsigned short&rang;::test(ViewPort&, Box&lang;int&rang;) &rArr; ViewPort::testTrueViewPoint(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::getBox()
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaletteComponent&lang;unsigned short&rang;::getForceRepaint()
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::test(ViewPort&, Box&lang;int&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::render(unsigned short)
</UL>

<P><STRONG><a name="[164]"></a>void GContentPane&lang;unsigned short&rang;::repaint&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, main.o(t._ZN12GContentPaneItE7repaintI7GButtonItEEEvR13ArrayListBaseIT_ER8ViewPort))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = void GContentPane&lang;unsigned short&rang;::repaint&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&) &rArr; GContentPane&lang;unsigned short&rang;::test(ViewPort&, Box&lang;int&rang;) &rArr; ViewPort::testTrueViewPoint(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::getBox()
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaletteComponent&lang;unsigned short&rang;::getForceRepaint()
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::test(ViewPort&, Box&lang;int&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::render(unsigned short)
</UL>

<P><STRONG><a name="[15d]"></a>GContentPane&lang;unsigned short&rang;::addSlider(GSlide&lang;unsigned short&rang;*)</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, main.o(t._ZN12GContentPaneItE9addSliderEP6GSlideItE))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GContentPane&lang;unsigned short&rang;::addSlider(GSlide&lang;unsigned short&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::init()
</UL>

<P><STRONG><a name="[180]"></a>GContentPane&lang;unsigned short&rang;::GContentPane__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)</STRONG> (Thumb, 332 bytes, Stack size 56 bytes, main.o(t._ZN12GContentPaneItEC2EP12GraphicFrameItiE))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = GContentPane&lang;unsigned short&rang;::GContentPane__sub_object(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; Graphic&lang;unsigned short&rang;::Graphic__sub_object(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; GCircle&lang;unsigned short&rang;::GCircle__sub_object(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; GPaneInterface&lang;unsigned short&rang;::operator ()(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; Dimension&lang;int&rang;::getBox()
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension()
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void Dimension&lang;int&rang;::setSize&lang;Box&lang;int&rang;&rang;(T1)
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::getBox()
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic&lang;unsigned short&rang;::Graphic__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::GComponent__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::newContentPane(GraphicFrame&lang;unsigned short, int&rang;*)
</UL>

<P><STRONG><a name="[131]"></a>ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;::fill(GraphicFrame&lang;unsigned short, int&rang;*)</STRONG> (Thumb, 114 bytes, Stack size 64 bytes, vm.o(t._ZN12ScreenDriverI7ILI9488I12GPIO_TypeDef14SpiSoftTypeDefE12GraphicFrameItiEE4fillEPS5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;::fill(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; unsigned ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill&lang;unsigned short, Box&lang;int&rang;&rang;(T1*, T2) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::window(unsigned short, unsigned short, unsigned short, unsigned short) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::wrData8(unsigned char) &rArr; SpiSoftTypeDef::send_9bit_Data(bool, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Synchronize&lang;ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;&rang;::~Synchronize()
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill&lang;unsigned short, Box&lang;int&rang;&rang;(T1*, T2)
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmfault(SVC_arg)
</UL>

<P><STRONG><a name="[167]"></a>void ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;::fill&lang;unsigned short&rang;(GraphicFrame&lang;unsigned short, int&rang;*, ViewPort&, T1)</STRONG> (Thumb, 168 bytes, Stack size 152 bytes, main.o(t._ZN12ScreenDriverI7ILI9488I12GPIO_TypeDef14SpiSoftTypeDefE12GraphicFrameItiEE4fillItEEvPS5_R8ViewPortT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = void ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;::fill&lang;unsigned short&rang;(GraphicFrame&lang;unsigned short, int&rang;*, ViewPort&, T1) &rArr; int ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill&lang;unsigned short, Box&lang;int&rang;, Box&lang;int&rang;&rang;(T1*, T2, T3, T1) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::window(unsigned short, unsigned short, unsigned short, unsigned short) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::wrData8(unsigned char) &rArr; SpiSoftTypeDef::send_9bit_Data(bool, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension()
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::getBox()
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill&lang;unsigned short, Box&lang;int&rang;, Box&lang;int&rang;&rang;(T1*, T2, T3, T1)
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Synchronize&lang;ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;&rang;::~Synchronize()
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Synchronize&lang;ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;&rang;::Synchronize(ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::render(unsigned short)
</UL>

<P><STRONG><a name="[15f]"></a>ArrayListBase&lang;GTextField&lang;unsigned short&rang;&rang;::addFirst(GTextField&lang;unsigned short&rang;&)</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, main.o(t._ZN13ArrayListBaseI10GTextFieldItEE8addFirstERS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ArrayListBase&lang;GTextField&lang;unsigned short&rang;&rang;::addFirst(GTextField&lang;unsigned short&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::init()
</UL>

<P><STRONG><a name="[14c]"></a>ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, memory_alloc.o(t._ZN13ArrayListBaseI11MemoryChunkE3addEPS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryAllocator::Delete(void*)
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryAllocator::New(unsigned)
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryAllocator::operator ()(unsigned, unsigned)
</UL>

<P><STRONG><a name="[1c7]"></a>ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, memory_alloc.o(t._ZN13ArrayListBaseI11MemoryChunkE3addERS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*)
</UL>

<P><STRONG><a name="[14a]"></a>ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk*)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, memory_alloc.o(t._ZN13ArrayListBaseI11MemoryChunkE6removeEPS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk&)
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryAllocator::sanitize(ArrayListBase&lang;MemoryChunk&rang;&)
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryAllocator::Delete(void*)
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryAllocator::New(unsigned)
</UL>

<P><STRONG><a name="[1c8]"></a>ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk&)</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, memory_alloc.o(t._ZN13ArrayListBaseI11MemoryChunkE6removeERS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk&)
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk*)
</UL>

<P><STRONG><a name="[150]"></a>ArrayListBase&lang;MemoryChunk&rang;::ArrayListBase()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, device.o(t._ZN13ArrayListBaseI11MemoryChunkEC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryAllocator::MemoryAllocator()
</UL>

<P><STRONG><a name="[22b]"></a>ArrayListBase&lang;MemoryChunk&rang;::ArrayListBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, device.o(t._ZN13ArrayListBaseI11MemoryChunkEC1Ev), UNUSED)

<P><STRONG><a name="[181]"></a>ArrayListBase&lang;GContentPane&lang;unsigned short&rang;&rang;::addFirst(GContentPane&lang;unsigned short&rang;&)</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, main.o(t._ZN13ArrayListBaseI12GContentPaneItEE8addFirstERS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ArrayListBase&lang;GContentPane&lang;unsigned short&rang;&rang;::addFirst(GContentPane&lang;unsigned short&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::newContentPane(GraphicFrame&lang;unsigned short, int&rang;*)
</UL>

<P><STRONG><a name="[184]"></a>ArrayListBase&lang;GContentPane&lang;unsigned short&rang;&rang;::getFirst()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guiengine.o(t._ZN13ArrayListBaseI12GContentPaneItEE8getFirstEv))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::fireSensorRelease(TouchStruct)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::fireSensorTouch(TouchStruct)
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::fireSensorPress(TouchStruct)
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::fireSensorClick(TouchStruct)
</UL>

<P><STRONG><a name="[1d2]"></a>ArrayListBase&lang;GraphicObject&lang;unsigned short&rang;&rang;::remove(GraphicObject&lang;unsigned short&rang;&)</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, main.o(t._ZN13ArrayListBaseI13GraphicObjectItEE6removeERS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ArrayListBase&lang;GraphicObject&lang;unsigned short&rang;&rang;::remove(GraphicObject&lang;unsigned short&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WalkingManObject&lang;unsigned short&rang;::tick()
</UL>

<P><STRONG><a name="[19c]"></a>ArrayListBase&lang;GComponentListener&rang;::ArrayListBase()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(t._ZN13ArrayListBaseI18GComponentListenerEC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::GComponent__sub_object()
</UL>

<P><STRONG><a name="[22c]"></a>ArrayListBase&lang;GComponentListener&rang;::ArrayListBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, main.o(t._ZN13ArrayListBaseI18GComponentListenerEC1Ev), UNUSED)

<P><STRONG><a name="[143]"></a>ArrayListBase&lang;NonPaletteInterface&lang;unsigned short&rang;&rang;::addFirst(NonPaletteInterface&lang;unsigned short&rang;&)</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, main.o(t._ZN13ArrayListBaseI19NonPaletteInterfaceItEE8addFirstERS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ArrayListBase&lang;NonPaletteInterface&lang;unsigned short&rang;&rang;::addFirst(NonPaletteInterface&lang;unsigned short&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestGameEngine::TestGameEngine(GContentPane&lang;unsigned short&rang;*)
</UL>

<P><STRONG><a name="[15e]"></a>ArrayListBase&lang;GLabel&lang;unsigned short&rang;&rang;::addFirst(GLabel&lang;unsigned short&rang;&)</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, main.o(t._ZN13ArrayListBaseI6GLabelItEE8addFirstERS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ArrayListBase&lang;GLabel&lang;unsigned short&rang;&rang;::addFirst(GLabel&lang;unsigned short&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::init()
</UL>

<P><STRONG><a name="[132]"></a>ArrayListBase&lang;Runnable&rang;::removeFirst()</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, vm.o(t._ZN13ArrayListBaseI8RunnableE11removeFirstEv))
<BR><BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::getAvailable(int)
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmstart()
</UL>

<P><STRONG><a name="[1f0]"></a>ArrayListBase&lang;Runnable&rang;::remove(Runnable&)</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, vm.o(t._ZN13ArrayListBaseI8RunnableE6removeERS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ArrayListBase&lang;Runnable&rang;::remove(Runnable&)
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void Runtime::runnablesTick&lang;Runtime*&rang;(T1)
</UL>

<P><STRONG><a name="[16e]"></a>ArrayListBase&lang;Runnable&rang;::addLast(Runnable*)</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, vm.o(t._ZN13ArrayListBaseI8RunnableE7addLastEPS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ArrayListBase&lang;Runnable&rang;::addLast(Runnable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::push(Runnable*)
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::addRunnable(int(*)(void*), char*, unsigned)
</UL>

<P><STRONG><a name="[174]"></a>ArrayListBase&lang;Runnable&rang;::addFirst(Runnable*)</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, vm.o(t._ZN13ArrayListBaseI8RunnableE8addFirstEPS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ArrayListBase&lang;Runnable&rang;::addFirst(Runnable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::init(unsigned, unsigned)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::resolveAPICall(RuntimeFrame*, SVC_arg)
</UL>

<P><STRONG><a name="[7e]"></a>ArrayListBase&lang;Runnable&rang;::ArrayListBase()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, device.o(t._ZN13ArrayListBaseI8RunnableEC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::Runtime__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device.o(i._ZN7RuntimeC2Ev)
</UL>
<P><STRONG><a name="[22d]"></a>ArrayListBase&lang;Runnable&rang;::ArrayListBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, device.o(t._ZN13ArrayListBaseI8RunnableEC1Ev), UNUSED)

<P><STRONG><a name="[8f]"></a>GraphicObject&lang;unsigned short&rang;::repaint()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gametestwalkingman.o(t._ZN13GraphicObjectItE7repaintEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GraphicObject&lang;unsigned short&rang;::repaint()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gametestwalkingman.o(.constdata__ZTV13GraphicObjectItE)
</UL>
<P><STRONG><a name="[1c9]"></a>GraphicObject&lang;unsigned short&rang;::GraphicObject__sub_object(Graphic&lang;unsigned short&rang;*)</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, gametestwalkingman.o(t._ZN13GraphicObjectItEC2EP7GraphicItE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GraphicObject&lang;unsigned short&rang;::GraphicObject__sub_object(Graphic&lang;unsigned short&rang;*)
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension()
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WalkingManObject&lang;unsigned short&rang;::throwWeapon(int, int)
</UL>

<P><STRONG><a name="[8d]"></a>ServerFactory&lang;DefaultServerListener&rang;::newListener(int(*)(void*))</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, device.o(t._ZN13ServerFactoryI21DefaultServerListenerE11newListenerEPFiPvE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ServerFactory&lang;DefaultServerListener&rang;::newListener(int(*)(void*)) &rArr; T1* Allocator&lang;void*&rang;::New&lang;DefaultServerListener&rang;()
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1* Allocator&lang;void*&rang;::New&lang;DefaultServerListener&rang;()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> device.o(.constdata)
<LI> device.o(.constdata__ZTV7Runtime)
<LI> device.o(.constdata__ZTV13ServerFactoryI21DefaultServerListenerE)
</UL>
<P><STRONG><a name="[df]"></a>ServerFactory&lang;DefaultServerListener&rang;::invokeServer(int)</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, vm.o(t._ZN13ServerFactoryI21DefaultServerListenerE12invokeServerEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ServerFactory&lang;DefaultServerListener&rang;::invokeServer(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::resolveAPICall(RuntimeFrame*, SVC_arg)
</UL>

<P><STRONG><a name="[179]"></a>ServerFactory&lang;DefaultServerListener&rang;::installServer(int(*)(void*), int, int, char*, void*)</STRONG> (Thumb, 198 bytes, Stack size 56 bytes, vm.o(t._ZN13ServerFactoryI21DefaultServerListenerE13installServerEPFiPvEiiPcS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ServerFactory&lang;DefaultServerListener&rang;::installServer(int(*)(void*), int, int, char*, void*) &rArr; Runnable* ThreadFactory::newServer&lang;char&rang;(int(*)(void*), unsigned, unsigned, T1*) &rArr; Runnable::init(int(*)(void*), unsigned, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1* Allocator&lang;void*&rang;::NewArray&lang;ArrayListBase&lang;DefaultServerListener&rang;&rang;(unsigned)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int Allocator&lang;void*&rang;::Delete&lang;ServerInterface&lang;DefaultServerListener&rang;&rang;(T1*)
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int Allocator&lang;void*&rang;::Delete&lang;ArrayListBase&lang;DefaultServerListener&rang;&rang;(T1*)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1* Allocator&lang;void*&rang;::New&lang;ServerInterface&lang;DefaultServerListener&rang;&rang;()
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runnable* ThreadFactory::newServer&lang;char&rang;(int(*)(void*), unsigned, unsigned, T1*)
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::init(unsigned, unsigned)
</UL>

<P><STRONG><a name="[177]"></a>ServerFactory&lang;DefaultServerListener&rang;::addServerListener(int(*)(void*), int, int)</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, vm.o(t._ZN13ServerFactoryI21DefaultServerListenerE17addServerListenerEPFiPvEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ServerFactory&lang;DefaultServerListener&rang;::addServerListener(int(*)(void*), int, int) &rArr; ServerInterface&lang;DefaultServerListener&rang;::addListener(DefaultServerListener*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerInterface&lang;DefaultServerListener&rang;::addListener(DefaultServerListener*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::resolveAPICall(RuntimeFrame*, SVC_arg)
</UL>

<P><STRONG><a name="[17c]"></a>ServerFactory&lang;DefaultServerListener&rang;::ServerFactory__sub_object()</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, device.o(t._ZN13ServerFactoryI21DefaultServerListenerEC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ServerFactory&lang;DefaultServerListener&rang;::ServerFactory__sub_object() &rArr; ThreadFactory::ThreadFactory__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Allocator&lang;void*&rang;::Allocator()
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFactory::ThreadFactory__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::Runtime__sub_object()
</UL>

<P><STRONG><a name="[178]"></a>Runnable* ThreadFactory::newServer&lang;const char&rang;(int(*)(void*), unsigned, unsigned, T1*)</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, vm.o(t._ZN13ThreadFactory9newServerIKcEEP8RunnablePFiPvEjjPT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Runnable* ThreadFactory::newServer&lang;const char&rang;(int(*)(void*), unsigned, unsigned, T1*) &rArr; Runnable::init(int(*)(void*), unsigned, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1* Allocator&lang;void*&rang;::New&lang;Runnable&rang;(unsigned)
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runnable::init(int(*)(void*), unsigned, int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::init(unsigned, unsigned)
</UL>

<P><STRONG><a name="[148]"></a>Runnable* ThreadFactory::newServer&lang;char&rang;(int(*)(void*), unsigned, unsigned, T1*)</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, vm.o(t._ZN13ThreadFactory9newServerIcEEP8RunnablePFiPvEjjPT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Runnable* ThreadFactory::newServer&lang;char&rang;(int(*)(void*), unsigned, unsigned, T1*) &rArr; Runnable::init(int(*)(void*), unsigned, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1* Allocator&lang;void*&rang;::New&lang;Runnable&rang;(unsigned)
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void Runnable::setName&lang;char&rang;(T1*)
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runnable::init(int(*)(void*), unsigned, int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerFactory&lang;DefaultServerListener&rang;::installServer(int(*)(void*), int, int, char*, void*)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerInterface::operator ()(int(*)(void*), unsigned, int, void*)
</UL>

<P><STRONG><a name="[1a0]"></a>GPaneInterface&lang;unsigned short&rang;::GPaneInterface__sub_object()</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, main.o(t._ZN14GPaneInterfaceItEC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPaneInterface&lang;unsigned short&rang;::GPaneInterface__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension()
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic&lang;unsigned short&rang;::Graphic__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GCircle&lang;unsigned short&rang;::GCircle__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print::Print&lang;unsigned short&rang;::Print__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print::DrawString&lang;unsigned short&rang;::DrawString__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GFill&lang;unsigned short&rang;::GFill__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line_Class&lang;unsigned short&rang;::Line_Class__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRectangle&lang;unsigned short&rang;::GRectangle__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
</UL>

<P><STRONG><a name="[1a1]"></a>GPaneInterface&lang;unsigned short&rang;::operator ()(GraphicFrame&lang;unsigned short, int&rang;*)</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, main.o(t._ZN14GPaneInterfaceItEclEP12GraphicFrameItiE))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = GPaneInterface&lang;unsigned short&rang;::operator ()(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; Dimension&lang;int&rang;::getBox()
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void Dimension&lang;int&rang;::setSize&lang;Box&lang;int&rang;&rang;(T1)
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::getBox()
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GCircle&lang;unsigned short&rang;::GCircle__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print::Print&lang;unsigned short&rang;::Print__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print::DrawString&lang;unsigned short&rang;::DrawString__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GFill&lang;unsigned short&rang;::GFill__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line_Class&lang;unsigned short&rang;::Line_Class__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRectangle&lang;unsigned short&rang;::GRectangle__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
</UL>

<P><STRONG><a name="[176]"></a>ServerInterface&lang;TimerListener&rang;::addListener(TimerListener*, unsigned)</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, vm.o(t._ZN15ServerInterfaceI13TimerListenerE11addListenerEPS0_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ServerInterface&lang;TimerListener&rang;::addListener(TimerListener*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::resolveAPICall(RuntimeFrame*, SVC_arg)
</UL>

<P><STRONG><a name="[ec]"></a>ServerInterface&lang;TimerListener&rang;::fireChannel(int)</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, timerserver.o(t._ZN15ServerInterfaceI13TimerListenerE11fireChannelEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ServerInterface&lang;TimerListener&rang;::fireChannel(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerServer(void*)
</UL>

<P><STRONG><a name="[1cf]"></a>ServerInterface&lang;DefaultServerListener&rang;::addListener(DefaultServerListener*, unsigned)</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, vm.o(t._ZN15ServerInterfaceI21DefaultServerListenerE11addListenerEPS0_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ServerInterface&lang;DefaultServerListener&rang;::addListener(DefaultServerListener*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerFactory&lang;DefaultServerListener&rang;::addServerListener(int(*)(void*), int, int)
</UL>

<P><STRONG><a name="[e1]"></a>RunnbleInterface&lang;Runnable&rang;::reset(void*)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, device.o(t._ZN16RunnbleInterfaceI8RunnableE5resetEPv))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[133]"></a>RunnbleInterface&lang;Runnable&rang;::getFrame(RuntimeFrame*)</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, vm.o(t._ZN16RunnbleInterfaceI8RunnableE8getFrameEP12RuntimeFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RunnbleInterface&lang;Runnable&rang;::getFrame(RuntimeFrame*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RuntimeFrame::init(RuntimeFrame*)
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::dispatch(void*)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::resolveAPICall(RuntimeFrame*, SVC_arg)
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::dispatchSVC(SVC_arg)
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmstart()
</UL>

<P><STRONG><a name="[120]"></a>WalkingManObject&lang;unsigned short&rang;::throwWeapon(int, int)</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, gametestwalkingman.o(t._ZN16WalkingManObjectItE11throwWeaponEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = WalkingManObject&lang;unsigned short&rang;::throwWeapon(int, int) &rArr; operator new(unsigned) &rArr; Alloc(unsigned) &rArr; MemoryAllocator::New(unsigned) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicObject&lang;unsigned short&rang;::GraphicObject__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::addGraphic(GraphicObject&lang;unsigned short&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultWalkingManClickListener(TouchStruct)
</UL>

<P><STRONG><a name="[11d]"></a>WalkingManObject&lang;unsigned short&rang;::tick()</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, main.o(t._ZN16WalkingManObjectItE4tickEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = WalkingManObject&lang;unsigned short&rang;::tick() &rArr; operator delete (void*) &rArr; Free(void*) &rArr; MemoryAllocator::Delete(void*) &rArr; MemoryAllocator::sanitize(ArrayListBase&lang;MemoryChunk&rang;&) &rArr; ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;GraphicObject&lang;unsigned short&rang;&rang;::remove(GraphicObject&lang;unsigned short&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WalkingManRepaintHook(void*)
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::render(unsigned short)
</UL>

<P><STRONG><a name="[144]"></a>WalkingManObject&lang;unsigned short&rang;::WalkingManObject(NonPaletteInterface&lang;unsigned short&rang;*)</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, main.o(t._ZN16WalkingManObjectItEC1EP19NonPaletteInterfaceItE))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = WalkingManObject&lang;unsigned short&rang;::WalkingManObject(NonPaletteInterface&lang;unsigned short&rang;*) &rArr; GComponent&lang;unsigned short&rang;::addReleaseListener(int(*)(TouchStruct)) &rArr; GComponent&lang;unsigned short&rang;::addListener(ArrayListBase&lang;GComponentListener&rang;&, int(*)(TouchStruct)) &rArr; operator new(unsigned) &rArr; Alloc(unsigned) &rArr; MemoryAllocator::New(unsigned) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension(int, int, int, int)
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaletteComponent&lang;unsigned short&rang;::getGraphic()
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::addReleaseListener(int(*)(TouchStruct))
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::addTouchListener(int(*)(TouchStruct))
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::addClickListener(int(*)(TouchStruct))
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestGameEngine::TestGameEngine(GContentPane&lang;unsigned short&rang;*)
</UL>

<P><STRONG><a name="[22e]"></a>WalkingManObject&lang;unsigned short&rang;::WalkingManObject__sub_object(NonPaletteInterface&lang;unsigned short&rang;*)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, main.o(t._ZN16WalkingManObjectItEC1EP19NonPaletteInterfaceItE), UNUSED)

<P><STRONG><a name="[105]"></a>GPaletteComponent&lang;unsigned short&rang;::getGraphic()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(t._ZN17GPaletteComponentItE10getGraphicEv))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WalkingManObject&lang;unsigned short&rang;::WalkingManObject(NonPaletteInterface&lang;unsigned short&rang;*)
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiEngine::newContentPane(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner2(void*)
</UL>

<P><STRONG><a name="[108]"></a>GPaletteComponent&lang;unsigned short&rang;::setBackground(unsigned short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(t._ZN17GPaletteComponentItE13setBackgroundEt))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner2(void*)
</UL>

<P><STRONG><a name="[142]"></a>GPaletteComponent&lang;unsigned short&rang;::setContentPane(void*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(t._ZN17GPaletteComponentItE14setContentPaneEPv))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1* GContentPane&lang;unsigned short&rang;::createComponent&lang;GSlide&lang;unsigned short&rang;&rang;(unsigned, unsigned, unsigned, unsigned)
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::init()
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestGameEngine::TestGameEngine(GContentPane&lang;unsigned short&rang;*)
</UL>

<P><STRONG><a name="[1c2]"></a>GPaletteComponent&lang;unsigned short&rang;::getForceRepaint()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(t._ZN17GPaletteComponentItE15getForceRepaintEv))
<BR><BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GContentPane&lang;unsigned short&rang;::repaint&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GContentPane&lang;unsigned short&rang;::repaint&lang;GSlide&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GContentPane&lang;unsigned short&rang;::repaint&lang;GLabel&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GContentPane&lang;unsigned short&rang;::repaint&lang;NonPaletteInterface&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GContentPane&lang;unsigned short&rang;::repaint&lang;GraphicObject&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GContentPane&lang;unsigned short&rang;::repaint&lang;GTextField&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)
</UL>

<P><STRONG><a name="[1a6]"></a>GPaletteComponent&lang;unsigned short&rang;::GPaletteComponent__sub_object(Graphic&lang;unsigned short&rang;*)</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, main.o(t._ZN17GPaletteComponentItEC2EP7GraphicItE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPaletteComponent&lang;unsigned short&rang;::GPaletteComponent__sub_object(Graphic&lang;unsigned short&rang;*)
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension()
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSlide&lang;unsigned short&rang;::GSlide__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::GLabel__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NonPaletteInterface&lang;unsigned short&rang;::NonPaletteInterface__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSelectable&lang;unsigned short&rang;::GSelectable__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTextField&lang;unsigned short&rang;::GTextField__sub_object(Graphic&lang;unsigned short&rang;*)
</UL>

<P><STRONG><a name="[156]"></a>GraphicFrame&lang;T1, T2&rang;* GraphicFrameFactory::newFrame&lang;unsigned short, int&rang;(Dimension&lang;T2&rang;)</STRONG> (Thumb, 98 bytes, Stack size 56 bytes, main.o(t._ZN19GraphicFrameFactory8newFrameItiEEP12GraphicFrameIT_T0_E9DimensionIS3_E))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GraphicFrame&lang;T1, T2&rang;* GraphicFrameFactory::newFrame&lang;unsigned short, int&rang;(Dimension&lang;T2&rang;) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; Alloc(unsigned) &rArr; MemoryAllocator::New(unsigned) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension(Dimension&lang;int&rang;&)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::getWidth()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::init()
</UL>

<P><STRONG><a name="[11a]"></a>NonPaletteInterface&lang;unsigned short&rang;::getUserObject()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gametestwalkingman.o(t._ZN19NonPaletteInterfaceItE13getUserObjectEv))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultWalkingManReleaseListener(TouchStruct)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultWalkingManTouchListener(TouchStruct)
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultWalkingManClickListener(TouchStruct)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WalkingManRepaintHook(void*)
</UL>

<P><STRONG><a name="[90]"></a>NonPaletteInterface&lang;unsigned short&rang;::repaint()</STRONG> (Thumb, 124 bytes, Stack size 80 bytes, main.o(t._ZN19NonPaletteInterfaceItE7repaintEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = NonPaletteInterface&lang;unsigned short&rang;::repaint() &rArr; GFill&lang;unsigned short&rang;::fill(Dimension&lang;int&rang;, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension(int, int, int, int)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension(Dimension&lang;int&rang;&)
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GFill&lang;unsigned short&rang;::fill(Dimension&lang;int&rang;, unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata__ZTV19NonPaletteInterfaceItE)
</UL>
<P><STRONG><a name="[140]"></a>NonPaletteInterface&lang;unsigned short&rang;::NonPaletteInterface__sub_object(Graphic&lang;unsigned short&rang;*)</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, main.o(t._ZN19NonPaletteInterfaceItEC2EP7GraphicItE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = NonPaletteInterface&lang;unsigned short&rang;::NonPaletteInterface__sub_object(Graphic&lang;unsigned short&rang;*) &rArr; GSelectable&lang;unsigned short&rang;::GSelectable__sub_object(Graphic&lang;unsigned short&rang;*) &rArr; GPaletteComponent&lang;unsigned short&rang;::GPaletteComponent__sub_object(Graphic&lang;unsigned short&rang;*)
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension()
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaletteComponent&lang;unsigned short&rang;::GPaletteComponent__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSelectable&lang;unsigned short&rang;::GSelectable__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSelectable&lang;unsigned short&rang;::setSelectBorderWidth(unsigned)
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::GComponent__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestGameEngine::TestGameEngine(GContentPane&lang;unsigned short&rang;*)
</UL>

<P><STRONG><a name="[1a2]"></a>GFill&lang;unsigned short&rang;::fill(Dimension&lang;int&rang;, unsigned short)</STRONG> (Thumb, 88 bytes, Stack size 28 bytes, main.o(t._ZN5GFillItE4fillE9DimensionIiEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GFill&lang;unsigned short&rang;::fill(Dimension&lang;int&rang;, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSlide&lang;unsigned short&rang;::repaint()
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::repaint()
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GFill&lang;unsigned short&rang;::fill(int, int, int, int, unsigned short)
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NonPaletteInterface&lang;unsigned short&rang;::repaint()
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTextField&lang;unsigned short&rang;::repaint()
</UL>

<P><STRONG><a name="[1a3]"></a>GFill&lang;unsigned short&rang;::fill(int, int, int, int, unsigned short)</STRONG> (Thumb, 60 bytes, Stack size 88 bytes, main.o(t._ZN5GFillItE4fillEiiiit))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = GFill&lang;unsigned short&rang;::fill(int, int, int, int, unsigned short) &rArr; GFill&lang;unsigned short&rang;::fill(Dimension&lang;int&rang;, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension(int, int, int, int)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension(Dimension&lang;int&rang;&)
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GFill&lang;unsigned short&rang;::fill(Dimension&lang;int&rang;, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTextField&lang;unsigned short&rang;::repaint()
</UL>

<P><STRONG><a name="[11c]"></a>void GFill&lang;unsigned short&rang;::fill&lang;Box&lang;int&rang;, tImage&lang;unsigned short&rang;&rang;(T1, T2*, unsigned short, signed char)</STRONG> (Thumb, 486 bytes, Stack size 52 bytes, gametestwalkingman.o(t._ZN5GFillItE4fillI3BoxIiE6tImageItEEEvT_PT0_ta))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = void GFill&lang;unsigned short&rang;::fill&lang;Box&lang;int&rang;, tImage&lang;unsigned short&rang;&rang;(T1, T2*, unsigned short, signed char)
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WalkingManRepaintHook(void*)
</UL>

<P><STRONG><a name="[121]"></a>void GFill&lang;unsigned short&rang;::fill&lang;Box&lang;int&rang;, const tImage&lang;unsigned short&rang;&rang;(T1, T2*, unsigned short, signed char)</STRONG> (Thumb, 486 bytes, Stack size 52 bytes, gametestwalkingman.o(t._ZN5GFillItE4fillI3BoxIiEK6tImageItEEEvT_PT0_ta))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = void GFill&lang;unsigned short&rang;::fill&lang;Box&lang;int&rang;, const tImage&lang;unsigned short&rang;&rang;(T1, T2*, unsigned short, signed char)
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WalkingManThrowingWeaponRepaintHook(void*)
</UL>

<P><STRONG><a name="[1d3]"></a>GFill&lang;unsigned short&rang;::GFill__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, main.o(t._ZN5GFillItEC2EP12GraphicFrameItiE))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = GFill&lang;unsigned short&rang;::GFill__sub_object(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; GPaneInterface&lang;unsigned short&rang;::operator ()(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; Dimension&lang;int&rang;::getBox()
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension()
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaneInterface&lang;unsigned short&rang;::operator ()(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaneInterface&lang;unsigned short&rang;::GPaneInterface__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic&lang;unsigned short&rang;::Graphic__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
</UL>

<P><STRONG><a name="[1d4]"></a>VmOut&lang;char&rang;::stringifyInt(char*, int, int)</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, main.o(t._ZN5VmOutIcE12stringifyIntEPcii))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = VmOut&lang;char&rang;::stringifyInt(char*, int, int) &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::print(int)
</UL>

<P><STRONG><a name="[1d6]"></a>VmOut&lang;char&rang;::stringifyInt(char*, unsigned, int)</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, vm.o(t._ZN5VmOutIcE12stringifyIntEPcji))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = VmOut&lang;char&rang;::stringifyInt(char*, unsigned, int) &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::printHex(unsigned)
</UL>

<P><STRONG><a name="[10d]"></a>VmOut&lang;char&rang;::clear()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, main.o(t._ZN5VmOutIcE5clearEv))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::setText(char*)
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;labelTouchListener(TouchStruct)
</UL>

<P><STRONG><a name="[12f]"></a>VmOut&lang;char&rang;::print(const char*)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, vm.o(t._ZN5VmOutIcE5printEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = VmOut&lang;char&rang;::print(const char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::printChar(char)
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::printHex(unsigned)
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::println(const char*)
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmfault(SVC_arg)
</UL>

<P><STRONG><a name="[12e]"></a>VmOut&lang;char&rang;::print(char*)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, vm.o(t._ZN5VmOutIcE5printEPc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = VmOut&lang;char&rang;::print(char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::printChar(char)
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::apendText(char*)
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::setText(char*)
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::print(int)
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::printHex(unsigned)
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmfault(SVC_arg)
</UL>

<P><STRONG><a name="[10e]"></a>VmOut&lang;char&rang;::print(int)</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, main.o(t._ZN5VmOutIcE5printEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = VmOut&lang;char&rang;::print(int) &rArr; VmOut&lang;char&rang;::stringifyInt(char*, int, int) &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::stringifyInt(char*, int, int)
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::print(char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::apendText(int)
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;labelTouchListener(TouchStruct)
</UL>

<P><STRONG><a name="[12c]"></a>VmOut&lang;char&rang;::println(const char*)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, vm.o(t._ZN5VmOutIcE7printlnEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = VmOut&lang;char&rang;::println(const char*) &rArr; VmOut&lang;char&rang;::print(const char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::printChar(char)
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::print(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmfault(SVC_arg)
</UL>

<P><STRONG><a name="[12d]"></a>VmOut&lang;char&rang;::printHex(unsigned)</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, vm.o(t._ZN5VmOutIcE8printHexEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = VmOut&lang;char&rang;::printHex(unsigned) &rArr; VmOut&lang;char&rang;::stringifyInt(char*, unsigned, int) &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::print(char*)
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::print(const char*)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::stringifyInt(char*, unsigned, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmfault(SVC_arg)
</UL>

<P><STRONG><a name="[1d7]"></a>VmOut&lang;char&rang;::printChar(char)</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, vm.o(t._ZN5VmOutIcE9printCharEc))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::println(const char*)
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::print(char*)
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::print(const char*)
</UL>

<P><STRONG><a name="[1a8]"></a>VmOut&lang;char&rang;::VmOut(char*, unsigned)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, main.o(t._ZN5VmOutIcEC1EPcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = VmOut&lang;char&rang;::VmOut(char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::GLabel__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTextField&lang;unsigned short&rang;::GTextField__sub_object(Graphic&lang;unsigned short&rang;*)
</UL>

<P><STRONG><a name="[22f]"></a>VmOut&lang;char&rang;::VmOut__sub_object(char*, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, main.o(t._ZN5VmOutIcEC1EPcj), UNUSED)

<P><STRONG><a name="[1a5]"></a>Dimension&lang;T1&rang;& print::DrawString&lang;unsigned short&rang;::drawString&lang;int&rang;(Dimension&lang;T1&rang;, char*, unsigned short, bool, bool)</STRONG> (Thumb, 250 bytes, Stack size 96 bytes, main.o(t._ZN5print10DrawStringItE10drawStringIiEER9DimensionIT_ES5_Pctbb))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = Dimension&lang;T1&rang;& print::DrawString&lang;unsigned short&rang;::drawString&lang;int&rang;(Dimension&lang;T1&rang;, char*, unsigned short, bool, bool) &rArr; print::DrawString&lang;unsigned short&rang;::putChar(Dimension&lang;int&rang;, char, unsigned short, const tChar&lang;unsigned short&rang;*, bool) &rArr; int print::DrawString&lang;unsigned short&rang;::drawScaledChar&lang;const tImage&lang;unsigned short&rang;&rang;(Dimension&lang;int&rang;, T1*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::operator =(Dimension&lang;int&rang;&)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension(Dimension&lang;int&rang;&)
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print::DrawString&lang;unsigned short&rang;::putChar(Dimension&lang;int&rang;, char, unsigned short, const tChar&lang;unsigned short&rang;*, bool)
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontCharSet&lang;tFont&lang;unsigned short&rang;, char&rang;::getH()
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::repaint()
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTextField&lang;unsigned short&rang;::repaint()
</UL>

<P><STRONG><a name="[1db]"></a>int print::DrawString&lang;unsigned short&rang;::drawScaledChar&lang;const tImage&lang;unsigned short&rang;&rang;(Dimension&lang;int&rang;, T1*, unsigned short)</STRONG> (Thumb, 214 bytes, Stack size 68 bytes, main.o(t._ZN5print10DrawStringItE14drawScaledCharIK6tImageItEEEi9DimensionIiEPT_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = int print::DrawString&lang;unsigned short&rang;::drawScaledChar&lang;const tImage&lang;unsigned short&rang;&rang;(Dimension&lang;int&rang;, T1*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print::DrawString&lang;unsigned short&rang;::putChar(Dimension&lang;int&rang;, char, unsigned short, const tChar&lang;unsigned short&rang;*, bool)
</UL>

<P><STRONG><a name="[1d9]"></a>print::DrawString&lang;unsigned short&rang;::putChar(Dimension&lang;int&rang;, char, unsigned short, const tChar&lang;unsigned short&rang;*, bool)</STRONG> (Thumb, 122 bytes, Stack size 64 bytes, main.o(t._ZN5print10DrawStringItE7putCharE9DimensionIiEctPK5tCharItEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = print::DrawString&lang;unsigned short&rang;::putChar(Dimension&lang;int&rang;, char, unsigned short, const tChar&lang;unsigned short&rang;*, bool) &rArr; int print::DrawString&lang;unsigned short&rang;::drawScaledChar&lang;const tImage&lang;unsigned short&rang;&rang;(Dimension&lang;int&rang;, T1*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension(Dimension&lang;int&rang;&)
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int print::DrawString&lang;unsigned short&rang;::drawChar&lang;const tImage&lang;unsigned short&rang;&rang;(Dimension&lang;int&rang;, T1*, unsigned short)
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int print::DrawString&lang;unsigned short&rang;::drawScaledChar&lang;const tImage&lang;unsigned short&rang;&rang;(Dimension&lang;int&rang;, T1*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;T1&rang;& print::DrawString&lang;unsigned short&rang;::drawString&lang;int&rang;(Dimension&lang;T1&rang;, char*, unsigned short, bool, bool)
</UL>

<P><STRONG><a name="[1da]"></a>int print::DrawString&lang;unsigned short&rang;::drawChar&lang;const tImage&lang;unsigned short&rang;&rang;(Dimension&lang;int&rang;, T1*, unsigned short)</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, main.o(t._ZN5print10DrawStringItE8drawCharIK6tImageItEEEi9DimensionIiEPT_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = int print::DrawString&lang;unsigned short&rang;::drawChar&lang;const tImage&lang;unsigned short&rang;&rang;(Dimension&lang;int&rang;, T1*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print::DrawString&lang;unsigned short&rang;::putChar(Dimension&lang;int&rang;, char, unsigned short, const tChar&lang;unsigned short&rang;*, bool)
</UL>

<P><STRONG><a name="[1dc]"></a>print::DrawString&lang;unsigned short&rang;::DrawString__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, main.o(t._ZN5print10DrawStringItEC2EP12GraphicFrameItiE))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = print::DrawString&lang;unsigned short&rang;::DrawString__sub_object(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; GPaneInterface&lang;unsigned short&rang;::operator ()(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; Dimension&lang;int&rang;::getBox()
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension()
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaneInterface&lang;unsigned short&rang;::operator ()(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaneInterface&lang;unsigned short&rang;::GPaneInterface__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic&lang;unsigned short&rang;::Graphic__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
</UL>

<P><STRONG><a name="[130]"></a>print::Print&lang;unsigned short&rang;::putChar(char, unsigned short, const tChar&lang;unsigned short&rang;*)</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, vm.o(t._ZN5print5PrintItE7putCharEctPK5tCharItE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = print::Print&lang;unsigned short&rang;::putChar(char, unsigned short, const tChar&lang;unsigned short&rang;*) &rArr; int print::Print&lang;unsigned short&rang;::printChar&lang;const tImage&lang;unsigned short&rang;&rang;(int, int, T1*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontCharSet&lang;tFont&lang;unsigned short&rang;, char&rang;::getH()
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int print::Print&lang;unsigned short&rang;::printChar&lang;const tImage&lang;unsigned short&rang;&rang;(int, int, T1*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmfault(SVC_arg)
</UL>

<P><STRONG><a name="[1dd]"></a>int print::Print&lang;unsigned short&rang;::printChar&lang;const tImage&lang;unsigned short&rang;&rang;(int, int, T1*, unsigned short)</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, vm.o(t._ZN5print5PrintItE9printCharIK6tImageItEEEiiiPT_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = int print::Print&lang;unsigned short&rang;::printChar&lang;const tImage&lang;unsigned short&rang;&rang;(int, int, T1*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print::Print&lang;unsigned short&rang;::putChar(char, unsigned short, const tChar&lang;unsigned short&rang;*)
</UL>

<P><STRONG><a name="[1de]"></a>print::Print&lang;unsigned short&rang;::Print__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, main.o(t._ZN5print5PrintItEC2EP12GraphicFrameItiE))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = print::Print&lang;unsigned short&rang;::Print__sub_object(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; GPaneInterface&lang;unsigned short&rang;::operator ()(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; Dimension&lang;int&rang;::getBox()
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension()
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaneInterface&lang;unsigned short&rang;::operator ()(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaneInterface&lang;unsigned short&rang;::GPaneInterface__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic&lang;unsigned short&rang;::Graphic__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
</UL>

<P><STRONG><a name="[91]"></a>GLabel&lang;unsigned short&rang;::repaint()</STRONG> (Thumb, 172 bytes, Stack size 88 bytes, main.o(t._ZN6GLabelItE7repaintEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = GLabel&lang;unsigned short&rang;::repaint() &rArr; Dimension&lang;T1&rang;& print::DrawString&lang;unsigned short&rang;::drawString&lang;int&rang;(Dimension&lang;T1&rang;, char*, unsigned short, bool, bool) &rArr; print::DrawString&lang;unsigned short&rang;::putChar(Dimension&lang;int&rang;, char, unsigned short, const tChar&lang;unsigned short&rang;*, bool) &rArr; int print::DrawString&lang;unsigned short&rang;::drawScaledChar&lang;const tImage&lang;unsigned short&rang;&rang;(Dimension&lang;int&rang;, T1*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension(int, int, int, int)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension(Dimension&lang;int&rang;&)
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;T1&rang;& print::DrawString&lang;unsigned short&rang;::drawString&lang;int&rang;(Dimension&lang;T1&rang;, char*, unsigned short, bool, bool)
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GFill&lang;unsigned short&rang;::fill(Dimension&lang;int&rang;, unsigned short)
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSelectable&lang;unsigned short&rang;::drawSelection()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata__ZTV6GLabelItE)
</UL>
<P><STRONG><a name="[117]"></a>GLabel&lang;unsigned short&rang;::setText(char*)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, main.o(t._ZN6GLabelItE7setTextEPc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GLabel&lang;unsigned short&rang;::setText(char*) &rArr; VmOut&lang;char&rang;::print(char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::clear()
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::print(char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider4TouchListener(TouchStruct)
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider3TouchListener(TouchStruct)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider2TouchListener(TouchStruct)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderTouchListener(TouchStruct)
</UL>

<P><STRONG><a name="[10f]"></a>GLabel&lang;unsigned short&rang;::apendText(char*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, main.o(t._ZN6GLabelItE9apendTextEPc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GLabel&lang;unsigned short&rang;::apendText(char*) &rArr; VmOut&lang;char&rang;::print(char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::print(char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider4TouchListener(TouchStruct)
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider3TouchListener(TouchStruct)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider2TouchListener(TouchStruct)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderTouchListener(TouchStruct)
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;labelTouchListener(TouchStruct)
</UL>

<P><STRONG><a name="[110]"></a>GLabel&lang;unsigned short&rang;::apendText(int)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, main.o(t._ZN6GLabelItE9apendTextEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GLabel&lang;unsigned short&rang;::apendText(int) &rArr; VmOut&lang;char&rang;::print(int) &rArr; VmOut&lang;char&rang;::stringifyInt(char*, int, int) &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::print(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider4TouchListener(TouchStruct)
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider3TouchListener(TouchStruct)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider2TouchListener(TouchStruct)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderTouchListener(TouchStruct)
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;labelTouchListener(TouchStruct)
</UL>

<P><STRONG><a name="[158]"></a>GLabel&lang;unsigned short&rang;::GLabel__sub_object(Graphic&lang;unsigned short&rang;*)</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, main.o(t._ZN6GLabelItEC2EP7GraphicItE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GLabel&lang;unsigned short&rang;::GLabel__sub_object(Graphic&lang;unsigned short&rang;*) &rArr; GSelectable&lang;unsigned short&rang;::GSelectable__sub_object(Graphic&lang;unsigned short&rang;*) &rArr; GPaletteComponent&lang;unsigned short&rang;::GPaletteComponent__sub_object(Graphic&lang;unsigned short&rang;*)
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension()
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VmOut&lang;char&rang;::VmOut(char*, unsigned)
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaletteComponent&lang;unsigned short&rang;::GPaletteComponent__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSelectable&lang;unsigned short&rang;::GSelectable__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSelectable&lang;unsigned short&rang;::setSelectBorderWidth(unsigned)
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::GComponent__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::init()
</UL>

<P><STRONG><a name="[15c]"></a>GSlide&lang;unsigned short&rang;::setTop(int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(t._ZN6GSlideItE6setTopEi))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::init()
</UL>

<P><STRONG><a name="[92]"></a>GSlide&lang;unsigned short&rang;::repaint()</STRONG> (Thumb, 786 bytes, Stack size 144 bytes, main.o(t._ZN6GSlideItE7repaintEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = GSlide&lang;unsigned short&rang;::repaint() &rArr; GSelectable&lang;unsigned short&rang;::drawSelection() &rArr; int GRectangle&lang;unsigned short&rang;::rectangle&lang;Box&lang;int&rang;&rang;(T1, unsigned, unsigned short) &rArr; int GRectangle&lang;unsigned short&rang;::fillRectPart&lang;Box&lang;int&rang;&rang;(T1, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::operator ()(int, int, int, int)
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension()
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension(Dimension&lang;int&rang;&)
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::getLeftCenter()
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GCircle&lang;unsigned short&rang;::circleFilled&lang;Point&lang;int&rang;&rang;(T1, float, unsigned short)
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GFill&lang;unsigned short&rang;::fill(Dimension&lang;int&rang;, unsigned short)
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSelectable&lang;unsigned short&rang;::drawSelection()
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int Line_Class&lang;unsigned short&rang;::lineBold&lang;Point&lang;int&rang;&rang;(T1, T1, unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata__ZTV6GSlideItE)
</UL>
<P><STRONG><a name="[118]"></a>GSlide&lang;unsigned short&rang;::getValue()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(t._ZN6GSlideItE8getValueEv))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider4TouchListener(TouchStruct)
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider3TouchListener(TouchStruct)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider2TouchListener(TouchStruct)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderTouchListener(TouchStruct)
</UL>

<P><STRONG><a name="[116]"></a>GSlide&lang;unsigned short&rang;::setValue(int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(t._ZN6GSlideItE8setValueEi))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider4TouchListener(TouchStruct)
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider3TouchListener(TouchStruct)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider2TouchListener(TouchStruct)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderTouchListener(TouchStruct)
</UL>

<P><STRONG><a name="[1b0]"></a>GSlide&lang;unsigned short&rang;::GSlide__sub_object(Graphic&lang;unsigned short&rang;*)</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, main.o(t._ZN6GSlideItEC2EP7GraphicItE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GSlide&lang;unsigned short&rang;::GSlide__sub_object(Graphic&lang;unsigned short&rang;*) &rArr; GSelectable&lang;unsigned short&rang;::GSelectable__sub_object(Graphic&lang;unsigned short&rang;*) &rArr; GPaletteComponent&lang;unsigned short&rang;::GPaletteComponent__sub_object(Graphic&lang;unsigned short&rang;*)
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension()
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaletteComponent&lang;unsigned short&rang;::GPaletteComponent__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSelectable&lang;unsigned short&rang;::GSelectable__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSelectable&lang;unsigned short&rang;::setSelectBorderWidth(unsigned)
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::GComponent__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1* GContentPane&lang;unsigned short&rang;::createComponent&lang;GSlide&lang;unsigned short&rang;&rang;(unsigned, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[1e1]"></a>int GCircle&lang;unsigned short&rang;::circleFilled&lang;Point&lang;int&rang;&rang;(T1, float, unsigned short)</STRONG> (Thumb, 242 bytes, Stack size 88 bytes, main.o(t._ZN7GCircleItE12circleFilledI5PointIiEEEiT_ft))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = int GCircle&lang;unsigned short&rang;::circleFilled&lang;Point&lang;int&rang;&rang;(T1, float, unsigned short) &rArr; GCircle&lang;unsigned short&rang;::fBotToTop(int, int, int, int, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GCircle&lang;unsigned short&rang;::fBotToTop(int, int, int, int, unsigned short)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GCircle&lang;unsigned short&rang;::Sqr(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSlide&lang;unsigned short&rang;::repaint()
</UL>

<P><STRONG><a name="[1e2]"></a>GCircle&lang;unsigned short&rang;::Sqr(int)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(t._ZN7GCircleItE3SqrEi))
<BR><BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GCircle&lang;unsigned short&rang;::circleFilled&lang;Point&lang;int&rang;&rang;(T1, float, unsigned short)
</UL>

<P><STRONG><a name="[1e3]"></a>GCircle&lang;unsigned short&rang;::fBotToTop(int, int, int, int, unsigned short)</STRONG> (Thumb, 90 bytes, Stack size 28 bytes, main.o(t._ZN7GCircleItE9fBotToTopEiiiit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GCircle&lang;unsigned short&rang;::fBotToTop(int, int, int, int, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GCircle&lang;unsigned short&rang;::circleFilled&lang;Point&lang;int&rang;&rang;(T1, float, unsigned short)
</UL>

<P><STRONG><a name="[1e4]"></a>GCircle&lang;unsigned short&rang;::GCircle__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, main.o(t._ZN7GCircleItEC2EP12GraphicFrameItiE))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = GCircle&lang;unsigned short&rang;::GCircle__sub_object(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; GPaneInterface&lang;unsigned short&rang;::operator ()(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; Dimension&lang;int&rang;::getBox()
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension()
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaneInterface&lang;unsigned short&rang;::operator ()(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaneInterface&lang;unsigned short&rang;::GPaneInterface__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic&lang;unsigned short&rang;::Graphic__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
</UL>

<P><STRONG><a name="[1c4]"></a>Graphic&lang;unsigned short&rang;::Graphic__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, main.o(t._ZN7GraphicItEC2EP12GraphicFrameItiE))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Graphic&lang;unsigned short&rang;::Graphic__sub_object(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; GCircle&lang;unsigned short&rang;::GCircle__sub_object(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; GPaneInterface&lang;unsigned short&rang;::operator ()(GraphicFrame&lang;unsigned short, int&rang;*) &rArr; Dimension&lang;int&rang;::getBox()
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension()
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GCircle&lang;unsigned short&rang;::GCircle__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print::Print&lang;unsigned short&rang;::Print__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print::DrawString&lang;unsigned short&rang;::DrawString__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GFill&lang;unsigned short&rang;::GFill__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaneInterface&lang;unsigned short&rang;::GPaneInterface__sub_object()
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line_Class&lang;unsigned short&rang;::Line_Class__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRectangle&lang;unsigned short&rang;::GRectangle__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::GContentPane__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
</UL>

<P><STRONG><a name="[192]"></a>ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill(unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, main.o(t._ZN7ILI9488I12GPIO_TypeDef14SpiSoftTypeDefE10driverFillEttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill(unsigned short, unsigned short, unsigned short) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::vsClk() &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::hsClk()
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::putColor&lang;unsigned short&rang;(T1)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::vsClk()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::hsClk()
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e8]"></a>ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, main.o(t._ZN7ILI9488I12GPIO_TypeDef14SpiSoftTypeDefE10driverFillEttttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::window(unsigned short, unsigned short, unsigned short, unsigned short) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::wrData8(unsigned char) &rArr; SpiSoftTypeDef::send_9bit_Data(bool, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::putColor&lang;unsigned short&rang;(T1)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::window(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::vsClk()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::hsClk()
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill&lang;unsigned short, Box&lang;int&rang;, Box&lang;int&rang;&rang;(T1*, T2, T3, T1)
</UL>

<P><STRONG><a name="[1c5]"></a>unsigned ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill&lang;unsigned short, Box&lang;int&rang;&rang;(T1*, T2)</STRONG> (Thumb, 120 bytes, Stack size 48 bytes, vm.o(t._ZN7ILI9488I12GPIO_TypeDef14SpiSoftTypeDefE10driverFillIt3BoxIiEEEjPT_T0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = unsigned ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill&lang;unsigned short, Box&lang;int&rang;&rang;(T1*, T2) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::window(unsigned short, unsigned short, unsigned short, unsigned short) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::wrData8(unsigned char) &rArr; SpiSoftTypeDef::send_9bit_Data(bool, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::window(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::vsClk()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::hsClk()
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;::fill(GraphicFrame&lang;unsigned short, int&rang;*)
</UL>

<P><STRONG><a name="[1c6]"></a>int ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill&lang;unsigned short, Box&lang;int&rang;, Box&lang;int&rang;&rang;(T1*, T2, T3, T1)</STRONG> (Thumb, 834 bytes, Stack size 112 bytes, main.o(t._ZN7ILI9488I12GPIO_TypeDef14SpiSoftTypeDefE10driverFillIt3BoxIiES5_EEiPT_T0_T1_S6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = int ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill&lang;unsigned short, Box&lang;int&rang;, Box&lang;int&rang;&rang;(T1*, T2, T3, T1) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::window(unsigned short, unsigned short, unsigned short, unsigned short) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::wrData8(unsigned char) &rArr; SpiSoftTypeDef::send_9bit_Data(bool, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::fillPart&lang;unsigned short&rang;(T1*, int, int, int, int, int)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::window(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;::fill&lang;unsigned short&rang;(GraphicFrame&lang;unsigned short, int&rang;*, ViewPort&, T1)
</UL>

<P><STRONG><a name="[1eb]"></a>ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::resetForce(bool)</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, main.o(t._ZN7ILI9488I12GPIO_TypeDef14SpiSoftTypeDefE10resetForceEb))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::init()
</UL>

<P><STRONG><a name="[155]"></a>ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::init()</STRONG> (Thumb, 332 bytes, Stack size 8 bytes, main.o(t._ZN7ILI9488I12GPIO_TypeDef14SpiSoftTypeDefE4initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::init() &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::delay(unsigned) &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::wrData8(unsigned char)
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::wrCmd8(unsigned char)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::delay(unsigned)
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::resetForce(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::init()
</UL>

<P><STRONG><a name="[1ec]"></a>ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::delay(unsigned)</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, main.o(t._ZN7ILI9488I12GPIO_TypeDef14SpiSoftTypeDefE5delayEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::delay(unsigned) &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::init()
</UL>

<P><STRONG><a name="[1e7]"></a>ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::hsClk()</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, main.o(t._ZN7ILI9488I12GPIO_TypeDef14SpiSoftTypeDefE5hsClkEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::hsClk()
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::dotClk(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::fillPart&lang;unsigned short&rang;(T1*, int, int, int, int, int)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::vsClk()
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill(unsigned short, unsigned short, unsigned short)
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill&lang;unsigned short, Box&lang;int&rang;&rang;(T1*, T2)
</UL>

<P><STRONG><a name="[1e5]"></a>ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::vsClk()</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(t._ZN7ILI9488I12GPIO_TypeDef14SpiSoftTypeDefE5vsClkEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::vsClk() &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::hsClk()
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::hsClk()
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::window(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill(unsigned short, unsigned short, unsigned short)
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill&lang;unsigned short, Box&lang;int&rang;&rang;(T1*, T2)
</UL>

<P><STRONG><a name="[1ef]"></a>ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::dotClk(unsigned)</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, main.o(t._ZN7ILI9488I12GPIO_TypeDef14SpiSoftTypeDefE6dotClkEj))
<BR><BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::window(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::hsClk()
</UL>

<P><STRONG><a name="[1e9]"></a>ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::window(unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, main.o(t._ZN7ILI9488I12GPIO_TypeDef14SpiSoftTypeDefE6windowEtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::window(unsigned short, unsigned short, unsigned short, unsigned short) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::wrData8(unsigned char) &rArr; SpiSoftTypeDef::send_9bit_Data(bool, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::wrData8(unsigned char)
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::wrCmd8(unsigned char)
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::dotClk(unsigned)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::vsClk()
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill&lang;unsigned short, Box&lang;int&rang;, Box&lang;int&rang;&rang;(T1*, T2, T3, T1)
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill&lang;unsigned short, Box&lang;int&rang;&rang;(T1*, T2)
</UL>

<P><STRONG><a name="[1ed]"></a>ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::wrCmd8(unsigned char)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, main.o(t._ZN7ILI9488I12GPIO_TypeDef14SpiSoftTypeDefE6wrCmd8Eh))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::wrCmd8(unsigned char) &rArr; SpiSoftTypeDef::send_9bit_Data(bool, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiSoftTypeDef::send_9bit_Data(bool, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::window(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::init()
</UL>

<P><STRONG><a name="[1ee]"></a>ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::wrData8(unsigned char)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, main.o(t._ZN7ILI9488I12GPIO_TypeDef14SpiSoftTypeDefE7wrData8Eh))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::wrData8(unsigned char) &rArr; SpiSoftTypeDef::send_9bit_Data(bool, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiSoftTypeDef::send_9bit_Data(bool, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::window(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::init()
</UL>

<P><STRONG><a name="[1ea]"></a>void ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::fillPart&lang;unsigned short&rang;(T1*, int, int, int, int, int)</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, main.o(t._ZN7ILI9488I12GPIO_TypeDef14SpiSoftTypeDefE8fillPartItEEvPT_iiiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = void ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::fillPart&lang;unsigned short&rang;(T1*, int, int, int, int, int) &rArr; ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::hsClk()
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::hsClk()
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill&lang;unsigned short, Box&lang;int&rang;, Box&lang;int&rang;&rang;(T1*, T2, T3, T1)
</UL>

<P><STRONG><a name="[1e6]"></a>void ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::putColor&lang;unsigned short&rang;(T1)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(t._ZN7ILI9488I12GPIO_TypeDef14SpiSoftTypeDefE8putColorItEEvT_))
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;::driverFill(unsigned short, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[17a]"></a>void Runtime::runnablesTick&lang;Runtime*&rang;(T1)</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, vm.o(t._ZN7Runtime13runnablesTickIPS_EEvT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = void Runtime::runnablesTick&lang;Runtime*&rang;(T1) &rArr; Runtime::push(Runnable*) &rArr; ArrayListBase&lang;Runnable&rang;::addLast(Runnable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayListBase&lang;Runnable&rang;::remove(Runnable&)
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::push(Runnable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::dispatch(void*)
</UL>

<P><STRONG><a name="[16d]"></a>void Runnable::setName&lang;char&rang;(T1*)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, vm.o(t._ZN8Runnable7setNameIcEEvPT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = void Runnable::setName&lang;char&rang;(T1*)
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runnable* ThreadFactory::newServer&lang;char&rang;(int(*)(void*), unsigned, unsigned, T1*)
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::addRunnable(int(*)(void*), char*, unsigned)
</UL>

<P><STRONG><a name="[175]"></a>T1* Allocator&lang;void*&rang;::New&lang;TimerListener&rang;()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, vm.o(t._ZN9AllocatorIPvE3NewI13TimerListenerEEPT_v))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = T1* Allocator&lang;void*&rang;::New&lang;TimerListener&rang;()
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::resolveAPICall(RuntimeFrame*, SVC_arg)
</UL>

<P><STRONG><a name="[1cb]"></a>T1* Allocator&lang;void*&rang;::New&lang;ServerInterface&lang;DefaultServerListener&rang;&rang;()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, vm.o(t._ZN9AllocatorIPvE3NewI15ServerInterfaceI21DefaultServerListenerEEEPT_v))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = T1* Allocator&lang;void*&rang;::New&lang;ServerInterface&lang;DefaultServerListener&rang;&rang;()
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerFactory&lang;DefaultServerListener&rang;::installServer(int(*)(void*), int, int, char*, void*)
</UL>

<P><STRONG><a name="[1ca]"></a>T1* Allocator&lang;void*&rang;::New&lang;DefaultServerListener&rang;()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, device.o(t._ZN9AllocatorIPvE3NewI21DefaultServerListenerEEPT_v))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = T1* Allocator&lang;void*&rang;::New&lang;DefaultServerListener&rang;()
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerFactory&lang;DefaultServerListener&rang;::newListener(int(*)(void*))
</UL>

<P><STRONG><a name="[16b]"></a>T1* Allocator&lang;void*&rang;::New&lang;Runnable&rang;(unsigned)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, vm.o(t._ZN9AllocatorIPvE3NewI8RunnableEEPT_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = T1* Allocator&lang;void*&rang;::New&lang;Runnable&rang;(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runnable* ThreadFactory::newServer&lang;char&rang;(int(*)(void*), unsigned, unsigned, T1*)
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runnable* ThreadFactory::newServer&lang;const char&rang;(int(*)(void*), unsigned, unsigned, T1*)
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::addRunnable(int(*)(void*), char*, unsigned)
</UL>

<P><STRONG><a name="[8c]"></a>Allocator&lang;void*&rang;::free(void*)</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, main.o(t._ZN9AllocatorIPvE4freeES0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Allocator&lang;void*&rang;::free(void*) &rArr; Free(void*) &rArr; MemoryAllocator::Delete(void*) &rArr; MemoryAllocator::sanitize(ArrayListBase&lang;MemoryChunk&rang;&) &rArr; ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::remove(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free(void*)
</UL>
<BR>[Address Reference Count : 6]<UL><LI> device.o(.constdata)
<LI> device.o(.constdata__ZTV13ThreadFactory)
<LI> device.o(.constdata__ZTV14TimerInterface)
<LI> device.o(.constdata__ZTV13ServerFactoryI21DefaultServerListenerE)
<LI> main.o(.constdata__ZTV9AllocatorIPvE)
<LI> main.o(.constdata__ZTV12GContentPaneItE)
</UL>
<P><STRONG><a name="[8b]"></a>Allocator&lang;void*&rang;::alloc(unsigned)</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, main.o(t._ZN9AllocatorIPvE5allocEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Allocator&lang;void*&rang;::alloc(unsigned) &rArr; Alloc(unsigned) &rArr; MemoryAllocator::New(unsigned) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Alloc(unsigned)
</UL>
<BR>[Address Reference Count : 6]<UL><LI> device.o(.constdata)
<LI> device.o(.constdata__ZTV13ThreadFactory)
<LI> device.o(.constdata__ZTV14TimerInterface)
<LI> device.o(.constdata__ZTV13ServerFactoryI21DefaultServerListenerE)
<LI> main.o(.constdata__ZTV9AllocatorIPvE)
<LI> main.o(.constdata__ZTV12GContentPaneItE)
</UL>
<P><STRONG><a name="[149]"></a>int Allocator&lang;void*&rang;::Delete&lang;ArrayListBase&lang;TimerListener&rang;&rang;(T1*)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, vm.o(t._ZN9AllocatorIPvE6DeleteI13ArrayListBaseI13TimerListenerEEEiPT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = int Allocator&lang;void*&rang;::Delete&lang;ArrayListBase&lang;TimerListener&rang;&rang;(T1*)
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerInterface::operator ()(int(*)(void*), unsigned, int, void*)
</UL>

<P><STRONG><a name="[1ce]"></a>int Allocator&lang;void*&rang;::Delete&lang;ArrayListBase&lang;DefaultServerListener&rang;&rang;(T1*)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, vm.o(t._ZN9AllocatorIPvE6DeleteI13ArrayListBaseI21DefaultServerListenerEEEiPT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = int Allocator&lang;void*&rang;::Delete&lang;ArrayListBase&lang;DefaultServerListener&rang;&rang;(T1*)
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerFactory&lang;DefaultServerListener&rang;::installServer(int(*)(void*), int, int, char*, void*)
</UL>

<P><STRONG><a name="[1cd]"></a>int Allocator&lang;void*&rang;::Delete&lang;ServerInterface&lang;DefaultServerListener&rang;&rang;(T1*)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, vm.o(t._ZN9AllocatorIPvE6DeleteI15ServerInterfaceI21DefaultServerListenerEEEiPT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = int Allocator&lang;void*&rang;::Delete&lang;ServerInterface&lang;DefaultServerListener&rang;&rang;(T1*)
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerFactory&lang;DefaultServerListener&rang;::installServer(int(*)(void*), int, int, char*, void*)
</UL>

<P><STRONG><a name="[147]"></a>T1* Allocator&lang;void*&rang;::NewArray&lang;ArrayListBase&lang;TimerListener&rang;&rang;(unsigned)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, vm.o(t._ZN9AllocatorIPvE8NewArrayI13ArrayListBaseI13TimerListenerEEEPT_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = T1* Allocator&lang;void*&rang;::NewArray&lang;ArrayListBase&lang;TimerListener&rang;&rang;(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerInterface::operator ()(int(*)(void*), unsigned, int, void*)
</UL>

<P><STRONG><a name="[1cc]"></a>T1* Allocator&lang;void*&rang;::NewArray&lang;ArrayListBase&lang;DefaultServerListener&rang;&rang;(unsigned)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, vm.o(t._ZN9AllocatorIPvE8NewArrayI13ArrayListBaseI21DefaultServerListenerEEEPT_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = T1* Allocator&lang;void*&rang;::NewArray&lang;ArrayListBase&lang;DefaultServerListener&rang;&rang;(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerFactory&lang;DefaultServerListener&rang;::installServer(int(*)(void*), int, int, char*, void*)
</UL>

<P><STRONG><a name="[1af]"></a>ArrayList&lang;FontCharSet&lang;tFont&lang;unsigned short&rang;, char&rang;&rang;::addFirst(FontCharSet&lang;tFont&lang;unsigned short&rang;, char&rang;&)</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, main.o(t._ZN9ArrayListI11FontCharSetI5tFontItEcEE8addFirstERS3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ArrayList&lang;FontCharSet&lang;tFont&lang;unsigned short&rang;, char&rang;&rang;::addFirst(FontCharSet&lang;tFont&lang;unsigned short&rang;, char&rang;&) &rArr; operator new(unsigned) &rArr; Alloc(unsigned) &rArr; MemoryAllocator::New(unsigned) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk*) &rArr; ArrayListBase&lang;MemoryChunk&rang;::add(MemoryChunk&)
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontFactory&lang;tFont&lang;unsigned short&rang;, char&rang;::collectFont(const tFont&lang;unsigned short&rang;*)
</UL>

<P><STRONG><a name="[f0]"></a>Dimension&lang;int&rang;::setOrigins(Point&lang;int&rang;)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, main.o(t._ZN9DimensionIiE10setOriginsE5PointIiE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Dimension&lang;int&rang;::setOrigins(Point&lang;int&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::render(unsigned short)
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PaneClickListener(TouchStruct)
</UL>

<P><STRONG><a name="[1e0]"></a>Dimension&lang;int&rang;::getLeftCenter()</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, main.o(t._ZN9DimensionIiE13getLeftCenterEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Dimension&lang;int&rang;::getLeftCenter()
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSlide&lang;unsigned short&rang;::repaint()
</UL>

<P><STRONG><a name="[11b]"></a>Dimension&lang;int&rang;::getBox()</STRONG> (Thumb, 28 bytes, Stack size 28 bytes, main.o(t._ZN9DimensionIiE6getBoxEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Dimension&lang;int&rang;::getBox()
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WalkingManRepaintHook(void*)
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaneInterface&lang;unsigned short&rang;::operator ()(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;::fill&lang;unsigned short&rang;(GraphicFrame&lang;unsigned short, int&rang;*, ViewPort&, T1)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::GContentPane__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GContentPane&lang;unsigned short&rang;::repaint&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GContentPane&lang;unsigned short&rang;::repaint&lang;GSlide&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GContentPane&lang;unsigned short&rang;::repaint&lang;GLabel&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GContentPane&lang;unsigned short&rang;::repaint&lang;NonPaletteInterface&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GContentPane&lang;unsigned short&rang;::repaint&lang;GraphicObject&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GContentPane&lang;unsigned short&rang;::repaint&lang;GTextField&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, ViewPort&)
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSelectable&lang;unsigned short&rang;::drawSelection()
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WalkingManThrowingWeaponRepaintHook(void*)
</UL>

<P><STRONG><a name="[141]"></a>Dimension&lang;int&rang;::setSize(int, int, int, int)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(t._ZN9DimensionIiE7setSizeEiiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Dimension&lang;int&rang;::setSize(int, int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1* GContentPane&lang;unsigned short&rang;::createComponent&lang;GSlide&lang;unsigned short&rang;&rang;(unsigned, unsigned, unsigned, unsigned)
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::init()
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestGameEngine::TestGameEngine(GContentPane&lang;unsigned short&rang;*)
</UL>

<P><STRONG><a name="[1c3]"></a>void Dimension&lang;int&rang;::setSize&lang;Box&lang;int&rang;&rang;(T1)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, main.o(t._ZN9DimensionIiE7setSizeI3BoxIiEEEvT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = void Dimension&lang;int&rang;::setSize&lang;Box&lang;int&rang;&rang;(T1)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaneInterface&lang;unsigned short&rang;::operator ()(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::GContentPane__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
</UL>

<P><STRONG><a name="[15b]"></a>Dimension&lang;int&rang;::getWidth()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(t._ZN9DimensionIiE8getWidthEv))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicFrame&lang;T1, T2&rang;* GraphicFrameFactory::newFrame&lang;unsigned short, int&rang;(Dimension&lang;T2&rang;)
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::init()
</UL>

<P><STRONG><a name="[195]"></a>Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, guiengine.o(t._ZN9DimensionIiE9testPointE5PointIiE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Dimension&lang;int&rang;::testPoint(Point&lang;int&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorTouchPane(TouchStruct)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::fireSensorPressPane(TouchStruct)
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;GSlide&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;GLabel&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;NonPaletteInterface&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorTouch&lang;GTextField&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;GSlide&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;GLabel&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;NonPaletteInterface&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorPress&lang;GTextField&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;GButton&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;GSlide&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;GLabel&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;NonPaletteInterface&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GContentPane&lang;unsigned short&rang;::fireSensorClick&lang;GTextField&lang;unsigned short&rang;&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int GComponent&lang;unsigned short&rang;::fireListeners&lang;GComponentListener&rang;(ArrayListBase&lang;T1&rang;&, TouchStruct)
</UL>

<P><STRONG><a name="[ff]"></a>Dimension&lang;int&rang;::Dimension(Dimension&lang;int&rang;&)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(t._ZN9DimensionIiEC1ERS0_))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::operator =(Dimension&lang;int&rang;&)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSlide&lang;unsigned short&rang;::repaint()
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::repaint()
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print::DrawString&lang;unsigned short&rang;::putChar(Dimension&lang;int&rang;, char, unsigned short, const tChar&lang;unsigned short&rang;*, bool)
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;T1&rang;& print::DrawString&lang;unsigned short&rang;::drawString&lang;int&rang;(Dimension&lang;T1&rang;, char*, unsigned short, bool, bool)
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GFill&lang;unsigned short&rang;::fill(int, int, int, int, unsigned short)
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NonPaletteInterface&lang;unsigned short&rang;::repaint()
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicFrame&lang;T1, T2&rang;* GraphicFrameFactory::newFrame&lang;unsigned short, int&rang;(Dimension&lang;T2&rang;)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTextField&lang;unsigned short&rang;::repaint()
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::init()
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner(void*)
</UL>

<P><STRONG><a name="[230]"></a>Dimension&lang;int&rang;::Dimension__sub_object(Dimension&lang;int&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, main.o(t._ZN9DimensionIiEC1ERS0_), UNUSED)

<P><STRONG><a name="[fe]"></a>Dimension&lang;int&rang;::Dimension(int, int, int, int)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(t._ZN9DimensionIiEC1Eiiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Dimension&lang;int&rang;::Dimension(int, int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::repaint()
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GFill&lang;unsigned short&rang;::fill(int, int, int, int, unsigned short)
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NonPaletteInterface&lang;unsigned short&rang;::repaint()
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WalkingManObject&lang;unsigned short&rang;::WalkingManObject(NonPaletteInterface&lang;unsigned short&rang;*)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTextField&lang;unsigned short&rang;::repaint()
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::init()
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner(void*)
</UL>

<P><STRONG><a name="[231]"></a>Dimension&lang;int&rang;::Dimension__sub_object(int, int, int, int)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, main.o(t._ZN9DimensionIiEC1Eiiii), UNUSED)

<P><STRONG><a name="[18f]"></a>Dimension&lang;int&rang;::Dimension()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(t._ZN9DimensionIiEC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_Font
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic&lang;unsigned short&rang;::Graphic__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GCircle&lang;unsigned short&rang;::GCircle__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSlide&lang;unsigned short&rang;::GSlide__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSlide&lang;unsigned short&rang;::repaint()
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLabel&lang;unsigned short&rang;::GLabel__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print::Print&lang;unsigned short&rang;::Print__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print::DrawString&lang;unsigned short&rang;::DrawString__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GFill&lang;unsigned short&rang;::GFill__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NonPaletteInterface&lang;unsigned short&rang;::NonPaletteInterface__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaletteComponent&lang;unsigned short&rang;::GPaletteComponent__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPaneInterface&lang;unsigned short&rang;::GPaneInterface__sub_object()
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void ScreenDriver&lang;ILI9488&lang;GPIO_TypeDef, SpiSoftTypeDef&rang;, GraphicFrame&lang;unsigned short, int&rang;&rang;::fill&lang;unsigned short&rang;(GraphicFrame&lang;unsigned short, int&rang;*, ViewPort&, T1)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GContentPane&lang;unsigned short&rang;::GContentPane__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSelectable&lang;unsigned short&rang;::GSelectable__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line_Class&lang;unsigned short&rang;::Line_Class__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTextField&lang;unsigned short&rang;::GTextField__sub_object(Graphic&lang;unsigned short&rang;*)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRectangle&lang;unsigned short&rang;::GRectangle__sub_object(GraphicFrame&lang;unsigned short, int&rang;*)
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GComponent&lang;unsigned short&rang;::GComponent__sub_object()
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicObject&lang;unsigned short&rang;::GraphicObject__sub_object(Graphic&lang;unsigned short&rang;*)
</UL>

<P><STRONG><a name="[232]"></a>Dimension&lang;int&rang;::Dimension__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, main.o(t._ZN9DimensionIiEC1Ev), UNUSED)

<P><STRONG><a name="[100]"></a>Dimension&lang;int&rang;::operator =(Dimension&lang;int&rang;&)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, main.o(t._ZN9DimensionIiEaSERS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Dimension&lang;int&rang;::operator =(Dimension&lang;int&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension(Dimension&lang;int&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;T1&rang;& print::DrawString&lang;unsigned short&rang;::drawString&lang;int&rang;(Dimension&lang;T1&rang;, char*, unsigned short, bool, bool)
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemEventBurner(void*)
</UL>

<P><STRONG><a name="[1df]"></a>Dimension&lang;int&rang;::operator ()(int, int, int, int)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(t._ZN9DimensionIiEclEiiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Dimension&lang;int&rang;::operator ()(int, int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSlide&lang;unsigned short&rang;::repaint()
</UL>

<P><STRONG><a name="[a4]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[233]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[234]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[9b]"></a>__sti___8_main_cpp_Font</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, main.o(i.__sti___8_main_cpp_Font))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __sti___8_main_cpp_Font
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dimension&lang;int&rang;::Dimension()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.init_array)
</UL>
<P><STRONG><a name="[9c]"></a>__sti___10_device_cpp_runtime</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, device.o(i.__sti___10_device_cpp_runtime))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __sti___10_device_cpp_runtime &rArr; Runtime::Runtime__sub_object() &rArr; ServerFactory&lang;DefaultServerListener&rang;::ServerFactory__sub_object() &rArr; ThreadFactory::ThreadFactory__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Runtime::Runtime__sub_object()
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device::Device()
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryAllocator::MemoryAllocator()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device.o(.init_array)
</UL>
<P><STRONG><a name="[c4]"></a>[local to stm32f4xx_hal_cortex_c]::NVIC_SetPriority(IRQn_Type, unsigned)</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(i._ZN44_INTERNAL_22_stm32f4xx_hal_cortex_c_2992dbc016NVIC_SetPriorityE9IRQn_Typej))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = [local to stm32f4xx_hal_cortex_c]::NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[c3]"></a>[local to stm32f4xx_hal_cortex_c]::NVIC_GetPriorityGrouping()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i._ZN44_INTERNAL_22_stm32f4xx_hal_cortex_c_2992dbc024NVIC_GetPriorityGroupingEv))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[cc]"></a>[local to stm32f4xx_hal_spi_c]::SPI_WaitOnFlagUntilTimeout(__SPI_HandleTypeDef*, unsigned, FlagStatus, unsigned)</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, stm32f4xx_hal_spi.o(i._ZN41_INTERNAL_19_stm32f4xx_hal_spi_c_5e7b22bd26SPI_WaitOnFlagUntilTimeoutEP19__SPI_HandleTypeDefj10FlagStatusj))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = [local to stm32f4xx_hal_spi_c]::SPI_WaitOnFlagUntilTimeout(__SPI_HandleTypeDef*, unsigned, FlagStatus, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
